<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>bindings on Rohit Goswami</title><link>https://rgoswami.me/tags/bindings/</link><description>Recent content in bindings on Rohit Goswami</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0&lt;/a>.</copyright><lastBuildDate>Wed, 28 Jun 2023 11:27:00 +0000</lastBuildDate><atom:link href="https://rgoswami.me/tags/bindings/index.xml" rel="self" type="application/rss+xml"/><item><title>CPP Library Blueprints for Python Bindings</title><link>https://rgoswami.me/posts/cpp-library-blueprints-pybind/</link><pubDate>Wed, 28 Jun 2023 11:27:00 +0000</pubDate><guid>https://rgoswami.me/posts/cpp-library-blueprints-pybind/</guid><description>Design guidelines for thin Python wrappers to C++ libraries
Background I recently ended up writing and rewriting a series of libraries to essentially get them to a point where I could write bindings to them. In doing so, some thoughts on design have evolved into this post.
False starts Originally, I had the library and bindings in one repository, which was easier to hack on, and had fewer moving parts.</description></item></channel></rss>