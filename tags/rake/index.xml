<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rake on Rohit Goswami</title><link>https://rgoswami.me/tags/rake/</link><description>Recent content in rake on Rohit Goswami</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0&lt;/a>.</copyright><lastBuildDate>Tue, 22 Sep 2020 10:30:00 +0000</lastBuildDate><atom:link href="https://rgoswami.me/tags/rake/index.xml" rel="self" type="application/rss+xml"/><item><title>Publishing Doxygen and Sphinx with Nix and Rake</title><link>https://rgoswami.me/posts/pub-doc-cpp-dox-sph-nix/</link><pubDate>Tue, 22 Sep 2020 10:30:00 +0000</pubDate><guid>https://rgoswami.me/posts/pub-doc-cpp-dox-sph-nix/</guid><description>Automating documentation deployment with Travis, rake and nix
Background In the previous post we generated documentation using Doxygen with Exhale to handle Sphinx. Now we will clean up the earlier workflow with rake and ensure the environment is reproducible with nix while deploying to Travis CI.
Setup A quick reminder of the setup we generated in the last post:
1tree -d $prj/ -L 2 . ├── docs │ ├── Doxygen │ └── Sphinx ├── nix │ └── pkgs ├── projects │ └── symengine └── scripts 8 directories We had further setup files to enable documentation generation with a manual two stage process (handling doxygen and sphinx separately).</description></item></channel></rss>