<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>orgmode on Rohit Goswami</title><link>https://rgoswami.me/tags/orgmode/</link><description>Recent content in orgmode on Rohit Goswami</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0&lt;/a>.</copyright><lastBuildDate>Tue, 27 Oct 2020 01:05:00 +0000</lastBuildDate><atom:link href="https://rgoswami.me/tags/orgmode/index.xml" rel="self" type="application/rss+xml"/><item><title>Anki Decks with Orgmode</title><link>https://rgoswami.me/posts/anki-decks-orgmode/</link><pubDate>Tue, 27 Oct 2020 01:05:00 +0000</pubDate><guid>https://rgoswami.me/posts/anki-decks-orgmode/</guid><description>Setting up unicode math and orgmode for painless Anki deck building
Background A recent Hacker News post reminded me of Anki, and that brought back memories of my Anki orgmode setup. I thought I&amp;rsquo;d re-create and immortalize it.
The standard way of working with Anki, is with a pretty awkward GUI. There are changes to be made here, which make life a little easier, including the setup of custom cards, but the inherent concerns of the WYSIWYG editor are basically insurmountable.</description></item><item><title>Temporary LaTeX Documents with Orgmode</title><link>https://rgoswami.me/posts/org-arb-tex/</link><pubDate>Fri, 19 Jun 2020 05:07:00 +0000</pubDate><guid>https://rgoswami.me/posts/org-arb-tex/</guid><description>A post on working with transient TeX templates in orgmode without modifying global configurations. This will also serve as a rudimentary introduction to TeX in orgmode.
Background The sad reality of working in a field dominated by institutional actors which do not care for recognizing software development as a skill is that there are often a lot of ugly LaTeX templates1. In particular, often Universities have arbitrary LaTeX templates from the the dark days of 2010 something, which include gratuitous usage of say, natbib instead of biblatex.</description></item><item><title>An Orgmode Note Workflow</title><link>https://rgoswami.me/posts/org-note-workflow/</link><pubDate>Sun, 10 May 2020 15:01:00 +0000</pubDate><guid>https://rgoswami.me/posts/org-note-workflow/</guid><description>Background One of the main reasons to use orgmode is definitely to get a better note taking workflow. Closely related to blogging or writing, the ideal note workflow is one which lets you keep a bunch of throwaway ideas and also somehow have access to them in a coherent manner. This will be a long post, and it is a work-in-progress, so, keep that in mind. Since this is mainly me1 work-shopping my technique, the philosophy will come in a later post probably.</description></item><item><title>Pandoc to Orgmode with Babel</title><link>https://rgoswami.me/posts/org-pandoc-babel/</link><pubDate>Sat, 02 May 2020 16:39:00 +0000</pubDate><guid>https://rgoswami.me/posts/org-pandoc-babel/</guid><description>Background One of the best things about writing in orgmode is that we can embed and execute arbitrary code snippets. However, not all languages have an exporter, for obvious reasons. Somewhat surprisingly, there is no way to call pandoc on embedded snippets, which feels like a waste, especially when a whole bunch of documentation formats can be converted to orgmode with it.
Consider the following beautifully highlighted snippet of an rst (ReStructured Text) list table.</description></item><item><title>Using Mathematica with Orgmode</title><link>https://rgoswami.me/posts/org-mathematica/</link><pubDate>Sun, 26 Apr 2020 20:01:00 +0000</pubDate><guid>https://rgoswami.me/posts/org-mathematica/</guid><description>Background I have been wanting to find a workflow which allows me to bypass writing a lot of TeX by hand for a while now. To that end I looked into using a computer algebra system (CAS). Naturally, my first choice was the FOSS Maxima (also because it uses Lisp under the hood). However, for all the reasons listed here, relating to its accuracy, which have not been fixed even though the post was over 5 years ago, I ended up having to go with the closed source Mathematica.</description></item><item><title>Replacing Jupyter with Orgmode</title><link>https://rgoswami.me/posts/jupyter-orgmode/</link><pubDate>Thu, 13 Feb 2020 22:36:00 +0000</pubDate><guid>https://rgoswami.me/posts/jupyter-orgmode/</guid><description>Background I dislike Jupyter notebooks (and JupyterHub) a lot EIN is really not much of a solution either In the past I have written some posts on TeX with JupyterHub and discussed ways to use virtual Python with JupyterHub in a more reasonable manner.
However, I personally found that EIN was a huge pain to work with, and I mostly ended up working with the web-interface anyway.
It is a bit redundant to do so, given that at-least for my purposes, the end result was a LaTeX document.</description></item></channel></rss>