<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>devenv on Rohit Goswami</title><link>https://rgoswami.me/tags/devenv/</link><description>Recent content in devenv on Rohit Goswami</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&lt;a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0&lt;/a>.</copyright><lastBuildDate>Sun, 19 Nov 2023 23:34:00 +0000</lastBuildDate><atom:link href="https://rgoswami.me/tags/devenv/index.xml" rel="self" type="application/rss+xml"/><item><title>Faster manual tests with popd</title><link>https://rgoswami.me/snippets/manual-tests-popd-spin/</link><pubDate>Sun, 19 Nov 2023 23:34:00 +0000</pubDate><guid>https://rgoswami.me/snippets/manual-tests-popd-spin/</guid><description>Both NumPy and SciPy use spin as a frontend to call meson and this can be used to setup a shell. The good thing is that invoking exit will return to the directory from which spin was run. To toggle between directories (e.g. a folder with a bug / issue reprex) and the rebuild quickly popd is useful.
1# Generate reprex for bug 2cd ~/Git/Github/BuggyNP/gh2322/ 3vim buggy.f90 4python whatever.py 5# whatever to reproduce the bug 6cd ~/Git/Github/NumPy 7# Make changes, rebuild 8spin run $SHELL 9popd 10# returned to the gh2322 folder, test 11python whatever.</description></item><item><title>Docker Development Environments</title><link>https://rgoswami.me/snippets/docker-dev-envs/</link><pubDate>Wed, 24 Nov 2021 16:20:00 +0000</pubDate><guid>https://rgoswami.me/snippets/docker-dev-envs/</guid><description>Very quick set of ugly commands to grab build environments. A much better approach is to make a custom Dockerfile or even better, use nix.
However it does work in a pinch.
1docker pull IMG:TAG 2sudo docker run -v LOCALDIR:DIRINDOCKER -it debian:experimental-20211115 bash 3# Don&amp;#39;t be root for long 4apt update 5apt install sudo vim zsh 6# Use the same username --&amp;gt; easier to manage permissions 7useradd -m -s /bin/zsh $USER -G sudo 8passwd $USER # Some crap 9# Or just add to the sudoers file 10echo &amp;#34;$USER ALL=(ALL:ALL) ALL&amp;#34; &amp;gt;&amp;gt; /etc/sudoers 11su $USER 12# numpy stuff 13sudo apt install gcc gfortran libopenblas-dev python3.</description></item></channel></rss>