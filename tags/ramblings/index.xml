<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ramblings on Rohit Goswami</title><link>https://rgoswami.me/tags/ramblings/</link><description>Recent content in ramblings on Rohit Goswami</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&lt;a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0&lt;/a>.</copyright><lastBuildDate>Sun, 12 Nov 2023 23:36:00 +0000</lastBuildDate><atom:link href="https://rgoswami.me/tags/ramblings/index.xml" rel="self" type="application/rss+xml"/><item><title>Types from Fortran to Python via Opaque Pointers</title><link>https://rgoswami.me/posts/types-fortran-python-opaque/</link><pubDate>Sun, 12 Nov 2023 23:36:00 +0000</pubDate><guid>https://rgoswami.me/posts/types-fortran-python-opaque/</guid><description>An exploration of the opaque object and pointer interface approach to unleash more modern features than those offered by the ISO Fortran standard.
Background Since this has been covered a few times before, just some quick pointers1. The ultimate context is to be able take nice, modern Fortran code with derived types and generate equally nice, user friendly, efficient Python wrappers via f2py.
Why? Where the last post (and the test implementation in f2py) left off, the type shadowing approach for having exactly interoperable bind(c) derived types (and functions) was covered.</description></item><item><title>Managing cloud based calibre libraries</title><link>https://rgoswami.me/posts/managing-cloud-based-calibre/</link><pubDate>Sat, 19 Aug 2023 13:33:00 +0000</pubDate><guid>https://rgoswami.me/posts/managing-cloud-based-calibre/</guid><description>Ruminations on cross-cloud library management
Background I have a set of different devices across which I need to sync my library (described in an earlier post). Ideally this should be a lazy synchronization mechanism and be as general as possible.
Constraints calibre should never be modifying the files while they are being synced, not only because it creates and removes a lot of temporary files and folders which will cause churn, but also because it actually locks files during modification and this leads to permission issues.</description></item><item><title>Managing Scanned Books</title><link>https://rgoswami.me/posts/managing-scanned-books/</link><pubDate>Mon, 26 Jun 2023 21:34:00 +0000</pubDate><guid>https://rgoswami.me/posts/managing-scanned-books/</guid><description>Where I consider digitizing colored content.
Background It so happened that I recently acquired a rather unique book which (somewhat oddly) had no corresponding digital variant 1. I&amp;rsquo;ve discussed how I modify books and papers for consumption on my Kobo Aura HD in the past, but this comes before that. Much of this is essentially a plug for Scantailor Advanced 2.
Goals Starting with the initial output pdf files from a scanner&amp;rsquo;s &amp;ldquo;scan to me&amp;rdquo; function 3 the goal is to have all the bells and whistles of a well-done digital book:</description></item><item><title>Laptop setup notes btrfs subvolumes</title><link>https://rgoswami.me/posts/laptop-setup-btrfs-notes/</link><pubDate>Mon, 01 May 2023 15:22:00 +0000</pubDate><guid>https://rgoswami.me/posts/laptop-setup-btrfs-notes/</guid><description>Thoughts on laptop configurations for ArchLinux in 2023, with btrfs and sway
Warning
This post is a little less complete than most, it has been dated to roughly the correct time chronologically.
Background I split this post from the previous one, to make each more self contained. Since the installation media has more features one might perhaps use gparted for resizing disks, use the GUI for managing networks, etc. Personally I generally allocate a chunk from whatever other OS is present in gparted, and format it as unformatted.</description></item><item><title>Customizing ArchLinux Installation Media</title><link>https://rgoswami.me/posts/customizing-archlinux-im/</link><pubDate>Sun, 30 Apr 2023 15:22:00 +0000</pubDate><guid>https://rgoswami.me/posts/customizing-archlinux-im/</guid><description>A short plug for hzArchiso, and general thoughts on archiso
Background I recently had to switch server boxes, due to a cascade of hardware errors stemming from a remodeling of my home. The new box, however, did not see fit to include a WiFi card, which meant I had to add one of my own, a Realtek 88XXau, the kernel module for which is on the AUR.
This meant the official ArchLinux ISO would not be able to connect to the internet, and short of copying over files from PC to PC manually with a USB stick, my only option was to build my own installation media.</description></item><item><title>Supplements for SciPy 2022</title><link>https://rgoswami.me/posts/scipycon-2022-meta/</link><pubDate>Tue, 15 Nov 2022 23:28:00 +0000</pubDate><guid>https://rgoswami.me/posts/scipycon-2022-meta/</guid><description>A meta-post on my in-person attendance of the 2022 SciPy Conference
Background I hadn&amp;rsquo;t been in an in-person conference for quite a long while now. There were multiple things going for SciPyCon. Collaborators at UT Austin (from the EON project). The prospect of meeting folks from Quansight. Meeting other members of the NumPy community I&amp;rsquo;d been working with virtually for a year. I had the pleasure of being the recipient of a SciPy Scholarship for my poster and conference proceeding on Wailord, which sealed the deal for me.</description></item><item><title>Fortran OOP and Python</title><link>https://rgoswami.me/posts/fortran-oop-python/</link><pubDate>Mon, 09 May 2022 03:39:00 +0000</pubDate><guid>https://rgoswami.me/posts/fortran-oop-python/</guid><description>Explorations of object oriented Fortran with bind(c) derived types for representations generated by F2PY
Background Derived types are easily one of the most visible of the modern Fortran (post-F90) features and are central to object oriented programming paradigms in Fortarn.
For those new to the language, a rough guide to some terminology:
Fortran Closest C/C++ equivalent derived type struct extends type inherited class final destructor not standard conforming undefined behaviour Only the first of these are actually covered in terms of interoperability with C as of the F2018 draft standard.</description></item><item><title>Spack and PyTorch Development Workflows</title><link>https://rgoswami.me/posts/spack-pytorch-dev-workflow/</link><pubDate>Sun, 24 Apr 2022 19:16:00 +0000</pubDate><guid>https://rgoswami.me/posts/spack-pytorch-dev-workflow/</guid><description>pytorch local development environments without tears, root access or spack dev-build
Background Build systems are a bit of a nightmare. I spend most of my time SSH&amp;rsquo;ed into more powerful CPU machines, and sometimes on machines with more exotic compute devices. micromamba is typically my poison of choice where nix is not an option.
However, micromamba doesn&amp;rsquo;t allow a whole lot in the way of setting up environments which do not use packages already on conda-forge.</description></item><item><title>Revisiting Wayland for ArchLinux</title><link>https://rgoswami.me/posts/revisiting-wayland-2021-archlinux/</link><pubDate>Fri, 24 Dec 2021 18:13:00 +0000</pubDate><guid>https://rgoswami.me/posts/revisiting-wayland-2021-archlinux/</guid><description>Ruminating on wayland and sway for daily use with ArchLinux
Background Many years ago, I found time to make an attempt to switch away from the X11 Window system to Wayland. At the time, I ended up switching back to Xorg, but I did want to revisit it. Since I returned from home recently and was gifted a Gen 6 ThinkPad X1 Carbon, I had a perfect opportunity to do so 1.</description></item><item><title>Exploring ISO_C_BINDING and type-bound procedures</title><link>https://rgoswami.me/posts/iso-c-type-bound-fortran/</link><pubDate>Sun, 19 Dec 2021 16:25:00 +0000</pubDate><guid>https://rgoswami.me/posts/iso-c-type-bound-fortran/</guid><description>A closer look at the standard Fortran C compatibility layer by exploring objects and linkers
Background Derived types and their interoperability have been covered previously in the context of usage from Python. However, much of the focus of the previous approach revolved around the iso_c_binding intrinsic module. A closer inspection of the functionality provided therein is the first step towards extending beyond the standards to support calling type bound procedures.</description></item><item><title>Simple Fortran Derived Types and Python</title><link>https://rgoswami.me/posts/cython-derivedtype-f2py/</link><pubDate>Sat, 02 Oct 2021 04:19:00 +0000</pubDate><guid>https://rgoswami.me/posts/cython-derivedtype-f2py/</guid><description>Moving simple Fortran derived types to Python and back via C
Background Object oriented programming has been part of Fortran for longer than I have been alive 1. Fortran has derived types now. They&amp;rsquo;ve been around for around for over three decades. The standards at the same time, have been supporting more and more interoperable operations. Details of these pleasant historical improvements are pretty much the most the Fortran standards committee have managed to date in the 21st century.</description></item><item><title>Presentation Supplements for FortranCon'21</title><link>https://rgoswami.me/posts/fortrancon-2021-meta/</link><pubDate>Fri, 24 Sep 2021 01:37:00 +0000</pubDate><guid>https://rgoswami.me/posts/fortrancon-2021-meta/</guid><description>A meta-post on twin presentations on F2PY and LFortran at FortranCon'21
Background I had the honor and pleasure to have two presentations at the second annual FortranCon in 2021. The fun part was both talks featured the language standard prominently, but were meant to form two sides of a coin.
f2py: Two Decades Later Co-Authors Dr. Ralf Gommers (Quansight Labs), Dr. Melissa Mendonca (Quansight Labs), Dr. Pearu Peterson (Quansight Labs) Duration 20 minutes (15 + 5) Abstract f2py is the gold standard for interfacing Fortran and Python.</description></item><item><title>NumPy, Meson and f2py</title><link>https://rgoswami.me/posts/numpy-meson-f2py/</link><pubDate>Thu, 23 Sep 2021 05:45:00 +0000</pubDate><guid>https://rgoswami.me/posts/numpy-meson-f2py/</guid><description>Exploring meson for interfacing fortran and python via f2py and standard techniques, with benchmarks.
Background A recent post gauging community interest in f2py brought to light (among other aspects) the fact that the build systems of f2py are rather opaque to the end user. There are good reasons for this, since many of the tools discussed in this post were not around / in any shape to be used during the active development of f2py1.</description></item><item><title>Presentation Supplements for Greens Function School</title><link>https://rgoswami.me/posts/leshouches-2021-meta/</link><pubDate>Fri, 10 Sep 2021 13:12:00 +0000</pubDate><guid>https://rgoswami.me/posts/leshouches-2021-meta/</guid><description>A meta-post on an oral presentation around Fortran and languages
Background I was a participant at the 2021 Les Houches school of physics on &amp;ldquo;Green&amp;rsquo;s function approach to multiple scattering theory in electronic structure and spectroscopies&amp;rdquo;. I opted to give a student talk on programming languages and elementary functions as a cautionary tale for IEEE 754.
Details Title Programming Language Interstices Abstract In this short talk I will discuss the changing landscape of programming languages from the viewpoint of “mixed language” bindings.</description></item><item><title>Regarding Quansight Labs</title><link>https://rgoswami.me/posts/joining-quansight-labs21/</link><pubDate>Sun, 29 Aug 2021 02:05:00 +0000</pubDate><guid>https://rgoswami.me/posts/joining-quansight-labs21/</guid><description>Towards sustainable FOSS with Quansight Labs
Background Rumors of my affiliation with Quansight Labs are indeed true. I have had the pleasure of joining the Labs division as a software engineer 1, whose philosophy is fantastically and succintly described by their director Dr. Ralf Gommers. This means, in nutshell, that in my spare time I will be able to contribute to the continued maintenance of key FOSS projects.
Why? A reasonable question.</description></item><item><title>GSoC21 LFortran and Computational Chemistry</title><link>https://rgoswami.me/posts/gsoc21-fin-reprot/</link><pubDate>Fri, 20 Aug 2021 00:43:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-fin-reprot/</guid><description>Directed recollections of the GSoC21 timeline
Background If the last ten weeks of weekly posts have not made it clear; as a student developer in the Google Summer of Code in the year 2021; I was privileged to work on the LFortran compiler alongside Gagandeep Singh and Thirumalai Shaktivel under the fantastic mentorship of Ondřej Čertík under the Fortran-Lang organization.
Pencil Pushing This section describes the overall work done in a manner designed to delight minds enamoured by brevity and numbers.</description></item><item><title>GSoC21 W10: LFortran Runtime Library Design</title><link>https://rgoswami.me/posts/gsoc21-w10/</link><pubDate>Sat, 14 Aug 2021 00:28:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w10/</guid><description>The road to accurate elementary intrinsic functions is paved with IEEE/ISO standards
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Logistics Met with Ondrej daily from Sunday till Friday On Sunday we finished the compile time evaluation design (partially) Ondrej finished the rest overnight On Monday, we started co working on runtime implemenations Also added some more compile time stuff and pointers to clean things up Ondrej fixed a longstanding bug in the deserialise of serialized mod On Wednesday there was more scaffolding work done on the generics Added another implicit cast On Thursday we implemented an all fortran sin function Just as accurate as gfortran Compiles with LFortran Also fixed another serialization bug (floats were being truncated) On Friday we redesigned the runtime library Also discussed future plans and longterm goals Opened discussions around the runtime library and elementary function accuracy on the Zulip instance Considered adding fortran versions of LAMMPS (F77 and F90) to the compilation plans Overview This was most definitely my most productive week by far.</description></item><item><title>42nd Annual Confereence of the Tex Users Group</title><link>https://rgoswami.me/posts/tug-2021-meta/</link><pubDate>Sat, 07 Aug 2021 15:39:00 +0000</pubDate><guid>https://rgoswami.me/posts/tug-2021-meta/</guid><description>A meta-post on social events and my presentation at TUG21
Background Much the same as the rationale behind my other presentation meta-posts, but with some added shilling; since TUG is fantastic. Plus like the last year, I was gven the opportunity to coordiate social events with Jennifer Claudio.
Social Events Since the 41st TUG in 2020; there is a Zulip instance which is active all year round 1 Can be joined here This year there was a Topia instance for more &amp;ldquo;pseudo-real&amp;rdquo; interactions Details sent to people who registered (free) Slides Title Continuous Integration and TeX with Org-Mode In this talk I would like to introduce the usage of TeX and templates along with generating ad-hoc class and style files for working with orgmode.</description></item><item><title>GSoC21 W9: LFortran Bug Hunting Bonanza</title><link>https://rgoswami.me/posts/gsoc21-w9/</link><pubDate>Fri, 06 Aug 2021 19:50:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w9/</guid><description>Continuing compile time intrinsic functions, ASR passes, and testing LAPACK
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Logistics Daily checkins over Zulip Code reviews on Gitlab Met with Ondrej and Thirumalai on Thursday Discussed comments and how to attach them Decided that it would make sense to possibly store the comments in the ASR to make sure that the comments are attached to the right nodes We discussed a set of outputs for the next week and wrap uppolicies It was fun to see some of Thirumalai&amp;rsquo;s work in person!</description></item><item><title>GSoC21 W8: LFortran Refactors, and Compile Time Evaluations</title><link>https://rgoswami.me/posts/gsoc21-w8/</link><pubDate>Fri, 30 Jul 2021 17:11:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w8/</guid><description>Language standardese and implementations
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Logistics Discussed more refactors over MRs and Zulip Overview Intrinsic functions and more bug hunting. A lot of starts in different directions, but I will need to trim these down a bit. A major goal was working through the compile time evaluation of some intrinsic functions.
New Merge Requests Split ast_to_asr An MR started last week, completed and approved this week tiny: Runtime implementation skeleton What will eventually be compiled, hooks into C for now tiny: Compile time implementation The population of value for tiny function calls Draft: Shift runtime intrinsic design Harmonizing the code-base, much of this is cleaning up my own earlier math implementations Draft: expr_value for Kind A WIP MR which will clean up the slightly strange extract_kind function Draft: Implement where construct An MR along the lines of if, related but distinct from Gagandeep&amp;rsquo;s masked optimization WIP Freshly Assigned Issues &amp;ndash;show-asr For larger values A visual glitch in the prettied output Additional Tasks Some of my earlier clean up MRs are beginning to stagnate (CI stuff), will have to catch up on them.</description></item><item><title>GSoC21 W7: LFortran Workflow Basics</title><link>https://rgoswami.me/posts/gsoc21-w7/</link><pubDate>Fri, 23 Jul 2021 22:33:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w7/</guid><description>Revisiting minidftatom and a birds eye view of lfortran
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Logistics Met with Ondrej on Tuesday Went over the debugging workflow Discussed the design of the SymbolTableVisitor and BodyVisitor Fixed a symbol scoping bug and discussed implementing value for kind Kept in touch asynchrously over Zulip and MRs Overview This week focused on implementing features and cleaning up parts of the project.</description></item><item><title>Talk Supplements for SERI'21</title><link>https://rgoswami.me/posts/seri-2021-meta/</link><pubDate>Sun, 18 Jul 2021 21:44:00 +0000</pubDate><guid>https://rgoswami.me/posts/seri-2021-meta/</guid><description>A meta-post on a talk I was to give at SERI'21
Background Much the same as the rationale behind my other presentation meta-posts, that is:
I would like to preserve questions I would like to collect the video, slides and other miscellaneous stuff in one location 1 It would be nice to have my own thoughts here afterwards Details SERI or the Software Engineering Research in India meeting is the only informal event dedicated to software engineering in the subcontinent, so it was rather gratifying to be accepted, and, to present on Modern documentation across languages.</description></item><item><title>GSoC21 W6: LFortran ASR and Values</title><link>https://rgoswami.me/posts/gsoc21-w6/</link><pubDate>Fri, 16 Jul 2021 17:19:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w6/</guid><description>Enriching ASR nodes at compile time
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Logistics Met with Ondrej on Monday and Wednesday Discussed the design choices w.r.t. class hierarchies (and the lack thereof) Overview Note that the title is rather misleading, this post has nothing to do with the values of the LFortran project (which are by the way, fantastic), but instead is about adding more detail to the ASR nodes.</description></item><item><title>GSoC21 W5: LFortran Design Details and minidftatom</title><link>https://rgoswami.me/posts/gsoc21-w5/</link><pubDate>Fri, 09 Jul 2021 19:23:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w5/</guid><description>Project scaffolding and compiler design
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Logistics Met with Ondrej on Tuesday, Wednesday and Thursday Discussed the AST, ASR and backends in more detail Zeroed in on several alternate designs implementations of intrinsic functions We have prototype calls for the two kinds of compile evaluation My sin implementation (pre-GSoC21) is pretty unwieldy and a cleaner method which we elected to pursue is the minval strategy Discussed concrete methods of working Talked about the runtime library This is a late stage issue, after the ASR generation Overview This week focused around a subset of dftatom which Ondrej prepared.</description></item><item><title>GSoC21 W4: LFortran, Backends and Bugs</title><link>https://rgoswami.me/posts/gsoc21-w4/</link><pubDate>Fri, 02 Jul 2021 23:26:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w4/</guid><description>Towards the mid-summer evaluation and redirecting efforts
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Overview This week was a bit of a sticky wicket. My unfamiliarity with the LLVM backend and its internals caught up with me just around the same time I ran into several fixture and rent related idiosyncrasies which led to yet another shift in my weekly meeting.</description></item><item><title>Talk Supplements for IOP CAPS'21 Webdev Workshop</title><link>https://rgoswami.me/posts/iop-caps-webdev-2021-meta/</link><pubDate>Sat, 26 Jun 2021 10:05:00 +0000</pubDate><guid>https://rgoswami.me/posts/iop-caps-webdev-2021-meta/</guid><description>A meta-post on the workshop I held for the IOP CAPS'21 student conference on Web Development for Physicists
Background Much the same as the rationale behind my other presentation meta-posts, that is:
I would like to preserve questions I would like to collect the video, slides and other miscellaneous stuff in one location 1 It would be nice to have my own thoughts here afterwards Details Workshop listing on conference site Blurb:</description></item><item><title>GSoC21 W3: Kind, Characters, and Standards</title><link>https://rgoswami.me/posts/gsoc21-w3/</link><pubDate>Sat, 26 Jun 2021 00:28:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w3/</guid><description>Standard practice pragmatic approaches to kind for dftatom
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Logistics Met with Ondrej on Tuesday Went over my kind implementation Merged older approved MRs Worked on generating tests Talked about the test methodology in general Most of the tests are better off in their integration form (discussed below) Some aspects of the passes may be tested using the doctest setup Set an additional time to discuss the implementation of assumed length character declarations These are not actually used in any dftatom routines but they are very common for utility functions Met with Ondrej on Thursday Discussed repercussions of backends Better, more explicit ASR rules can stem from not relying on the CPP backend Talked about the number of passes (SRC-&amp;gt;AST-&amp;gt;ASR-&amp;gt;LLVM) Started working on getting the right thing happen when faced with character(len=*) Overview This week also saw an increase in community activities on the Fortran discourse, since the J3 meeting is now underway and user polling 1 is in full swing.</description></item><item><title>GSoC21 W2: LFortran Unraveling</title><link>https://rgoswami.me/posts/gsoc21-w2/</link><pubDate>Fri, 18 Jun 2021 18:59:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w2/</guid><description>Delving into language standards and back-ends for lfortran
Background As discussed in a previous post in this series, I have been spending roughly half of each working day with LFortran as part of the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Logistics Some of the meeting points are to be expanded on below.
Met with Ondrej on Tuesday, as discussed previously Talked about language server implementations Looked into rtags and generating a compilation-database Discussed how the C++ concept of having file based units makes this simpler than the Fortran form, which recognizes no file based program units Talked about the status of the different back-ends Discussed LLVM and MLIR, in the context of Flang (the f18 compiler) Also briefly touched upon legacy-flang and historical issues Discussed standardization of the mod-files Decided this is not a good idea, because a lot of build systems expect Fortran compilers to generate .</description></item><item><title>GSoC21 W1: LFortran Kickoff</title><link>https://rgoswami.me/posts/gsoc21-w1/</link><pubDate>Sat, 12 Jun 2021 00:57:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w1/</guid><description>Charting paths towards concrete lfortran usage
Background As mentioned in an earlier post, I have had the immense pleasure of continuing development of the disruptive lfortran compiler under the aegis of the Fortran Lang organization, financed by the Google Summer of Code and mentored ably by Ondrej Certik. A rather interesting consequence of this is that we are strongly encouraged to write a precis of our activities each week. This is mine, given that the clock starting winding down (full timeline) last Monday.</description></item><item><title>Talk Supplements for Code In Place 2021 SL Workshop</title><link>https://rgoswami.me/posts/cip-2021-slw-meta/</link><pubDate>Sat, 29 May 2021 07:07:00 +0000</pubDate><guid>https://rgoswami.me/posts/cip-2021-slw-meta/</guid><description>A meta-post on the workshop I held for the Section Leaders of Code in Place 2021 entitled &amp;ldquo;Wrangling Pythons with Nix for Reproducible Purity&amp;rdquo;
Background Much the same as the rationale behind my other presentation meta-posts, that is:
I would like to preserve questions I would like to collect the video, slides and other miscellaneous stuff in one location 1 It would be nice to have my own thoughts here afterwards Details Blurb verbatim from the spreadsheet.</description></item><item><title>Fortran, GSoC21 and Me</title><link>https://rgoswami.me/posts/fortran-gsoc-me/</link><pubDate>Fri, 21 May 2021 05:17:00 +0000</pubDate><guid>https://rgoswami.me/posts/fortran-gsoc-me/</guid><description>Reminisces and prophecies brought upon by LFortran and GSoC 2021
Background I know not what the language of the future will look like, but I know it will be called FORTRAN&amp;hellip; &amp;lt;br&amp;gt; &amp;mdash; Charles Anthony Richard Hoare, circa 1982 &amp;lt;br&amp;gt; &amp;ndash; Daan Frenkel, 2020
This post is a little belated, given that the GSoC announcements were a few days ago. Therein lies the future, and much digital ink, sweat and blood shall be spilled towards accomplishing the goals outlined in my accepted project proposal.</description></item><item><title>Dotfiles from dotgit to bombadil</title><link>https://rgoswami.me/posts/dotfiles-dotgit-bombadil/</link><pubDate>Sun, 02 May 2021 23:12:00 +0000</pubDate><guid>https://rgoswami.me/posts/dotfiles-dotgit-bombadil/</guid><description>Discussion on dotfile management, a meandering path to my current setup from dotgit to bombadil. EDIT: Superseded by my chezmoi configuration described here
Background No one gets very far working with stock one-size fits all tools in any discipline but it is especially true of working with computers. The right set of dotfiles have been compared to priming spells for invocation later, and this is probably true. More than anything else, dotfiles offer familiarity where there is none, be it from cowsay or a fancy shell prompt 1.</description></item><item><title>Talk Supplements for IOP's C++ Workshop</title><link>https://rgoswami.me/posts/iop-cpp-2021-meta/</link><pubDate>Wed, 14 Apr 2021 01:17:00 +0000</pubDate><guid>https://rgoswami.me/posts/iop-cpp-2021-meta/</guid><description>A meta-post on the workshop I held for the IOP student community on Intermediate C++
Background Much the same as the rationale behind my other presentation meta-posts, that is:
I would like to preserve questions I would like to collect the video, slides and other miscellaneous stuff in one location 1 It would be nice to have my own thoughts here afterwards Details Blurb verbatim from the workshop announcement.</description></item><item><title>SymEngine and the Season of Docs</title><link>https://rgoswami.me/posts/symengine-gsod20/</link><pubDate>Thu, 25 Mar 2021 21:18:00 +0000</pubDate><guid>https://rgoswami.me/posts/symengine-gsod20/</guid><description>An overview of documentation complexity and an analysis of incentives.
Background As mentioned a few times before, last year a proposal of mine to improve the documentation for the SymEngine organization was accepted under the Google Season of Docs 2020 initiative. This is a more personal and expanded discussion on the report submitted on the SymEngine Wiki regarding the goals and completion metrics.
Figure 1: Promotional image Google seemed to strongly suggest</description></item><item><title>My Life in E-ink</title><link>https://rgoswami.me/posts/my-life-in-eink/</link><pubDate>Sat, 20 Feb 2021 01:41:00 +0000</pubDate><guid>https://rgoswami.me/posts/my-life-in-eink/</guid><description>Collection of odds and ends relating to e-readers including personal reminisces
Background Reading has been a huge part of my life. The written word has had arguably more of an impact on my life than anything I have experienced in person. As a kid back in early 2000&amp;rsquo;s; this meant a lot of library trips and saving for paperbacks. I also caught the first wave of the e-ink revolution. Nothing beats a real book, in terms of textures and scents; but e-ink devices and the fantastic tools outlined here should make reading digital books much more palpable 1.</description></item><item><title>Talk Supplements for NixCon 2020</title><link>https://rgoswami.me/posts/nixcon-in-2020-meta/</link><pubDate>Sat, 17 Oct 2020 10:40:00 +0000</pubDate><guid>https://rgoswami.me/posts/nixcon-in-2020-meta/</guid><description>A meta-post on my lightning talk at NixCon 2020
Background Much the same as the rationale behind my meta-post on my talk at PyCon India 2020, that is:
I would like to preserve questions I would like to collect the video, slides and other miscellaneous stuff in one location 1 It would be nice to have my own thoughts here afterwards Details Title Nix from the dark ages (without Root) Proposal See the cfp response here Abstract Short comments from the trenches of High Performance Clusters on working with Nix on kernel locked-in systems without proot support.</description></item><item><title>Talk Supplements for PyCon India 2020</title><link>https://rgoswami.me/posts/pycon-in-2020-meta/</link><pubDate>Fri, 02 Oct 2020 23:56:00 +0000</pubDate><guid>https://rgoswami.me/posts/pycon-in-2020-meta/</guid><description>A meta-post on my talk at PyCon India 2020
Background I am to present at PyCon IN 2020. Some of the motivating reasons for having a post are:
I would like to preserve questions I would like to collect the video, slides and other miscellaneous stuff in one location 1 It would be nice to have my own thoughts here afterwards Details of this happy circumstance are reproduced below from the CFP here.</description></item><item><title>Grant Proposals - I</title><link>https://rgoswami.me/posts/grant-proposals/</link><pubDate>Sat, 18 Jul 2020 20:31:00 +0000</pubDate><guid>https://rgoswami.me/posts/grant-proposals/</guid><description>Personal recollections of the academic grant writing process.
Background Of the many types of writing one undertakes in a typical academic career, grant writing stands out as a rather large anomaly. For the purposes of this post, we will note that an academic writing taxonomy would consist of roughly:
Coursework and Assignments These are more or less comparative writing exercises, where the only main thing which is enforced is (or should be) plagiarism checks.</description></item><item><title>LineageOS Maintainer Appreciation</title><link>https://rgoswami.me/posts/linos-maintainer-appre/</link><pubDate>Sun, 28 Jun 2020 18:35:00 +0000</pubDate><guid>https://rgoswami.me/posts/linos-maintainer-appre/</guid><description>A post on a surprisingly heartwarming community appreciation effort.
Background As probably anyone who has asked me about my programming experience has heard, my first real foray into the FOSS community was being a LineageOS co-maintainer (as HaoZeke) for the Xperia Z5 Dual. I haven&amp;rsquo;t thought about the community all that much for a few years, mostly since XDA became pretty toxic, and Android development just got, less exciting.</description></item><item><title>Site Rationale</title><link>https://rgoswami.me/posts/rationale/</link><pubDate>Tue, 11 Feb 2020 23:28:00 +0000</pubDate><guid>https://rgoswami.me/posts/rationale/</guid><description>Why this site exists I have a lot of online presences. I have been around (or at-least, lurking) for over ten years. Almost as long as I have been programming. Anyway, I have a penchant lately for using emacs and honestly there isn&amp;rsquo;t very good support for org-mode files. There are options recently with gatsby as well, but this seemed kinda neat.
What &amp;rsquo;this&amp;rsquo; is This site is built by Hugo The posts are generated with ox-hugo The theme is based of this excellent one by Djordje Atlialp, which in turn is based off of this theme by panr My modifications are here What is here Mostly random thoughts I don&amp;rsquo;t mind people knowing Some tech stuff which isn&amp;rsquo;t coherent enough to be put in any form with references Emacs specific workflows which I might want to write about more than short notes on the config What isn&amp;rsquo;t here Some collections should and will go to my grimoire My doom-emacs configuration Academic stuff is better tracked on Publons or Google Scholar or my pages hosted by my favorite IITK group or UI group</description></item><item><title>Collection of WebLinks</title><link>https://rgoswami.me/posts/rg-collection-weblinks/</link><pubDate>Thu, 10 Aug 1995 00:00:00 +0000</pubDate><guid>https://rgoswami.me/posts/rg-collection-weblinks/</guid><description>An attempt to re-claim and verify my digital presence.
Background I mentioned on my about page, that it is nigh impossible to keep track of every digital trace there is of me. That said, it is really not even a countable infinite set yet, so it is a good idea to get started before it gets much worse. This is minimally curated, and will only be sporadically updated, so take everything here with a grain of salt.</description></item></channel></rss>