<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>packaging on Rohit Goswami</title><link>https://rgoswami.me/tags/packaging/</link><description>Recent content in packaging on Rohit Goswami</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&lt;a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0&lt;/a>.</copyright><lastBuildDate>Fri, 10 Nov 2023 18:50:00 +0000</lastBuildDate><atom:link href="https://rgoswami.me/tags/packaging/index.xml" rel="self" type="application/rss+xml"/><item><title>Writing R Packages</title><link>https://rgoswami.me/posts/writing-r-packages/</link><pubDate>Fri, 10 Nov 2023 18:50:00 +0000</pubDate><guid>https://rgoswami.me/posts/writing-r-packages/</guid><description>Some thoughts on melding R with lower level languages and package management
Background I like plotting with ggplot2. It makes more sense to me than the other plotting systems. These notes arose while binding readCon and potlib for cuh2vizR. However, for best practices, my fastMatMR project should be consulted.
Idiosyncracies I find it odd that R packages commit so much generated code Can be simplified with a CI bot Repo setup pixi with renv turns out to be surprisingly robust.</description></item></channel></rss>