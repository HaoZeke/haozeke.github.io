<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>sphinx on Rohit Goswami</title><link>https://rgoswami.me/tags/sphinx/</link><description>Recent content in sphinx on Rohit Goswami</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&lt;a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0&lt;/a>.</copyright><lastBuildDate>Tue, 22 Sep 2020 06:58:00 +0000</lastBuildDate><atom:link href="https://rgoswami.me/tags/sphinx/index.xml" rel="self" type="application/rss+xml"/><item><title>Documenting C++ with Doxygen and Sphinx - Exhale</title><link>https://rgoswami.me/posts/doc-cpp-dox-sph-exhale/</link><pubDate>Tue, 22 Sep 2020 06:58:00 +0000</pubDate><guid>https://rgoswami.me/posts/doc-cpp-dox-sph-exhale/</guid><description>This post outlines a basic workflow for C++ projects using Doxygen, Sphinx, and Exhale.
Background My project proposal for documenting Symengine was recently accepted for the Google Summer of Docs initiative. In the past I have been more than happy to document C++ code using only Doxygen (with pretty fantastic results), while keeping example usage separate (d-SEAMS wiki). Though this is still a feasible method, a monolithic multi-project setup might benefit from Sphinx, which is what will be covered.</description></item></channel></rss>