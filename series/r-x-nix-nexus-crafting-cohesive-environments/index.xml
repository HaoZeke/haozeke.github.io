<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>R x Nix Nexus: Crafting Cohesive Environments on Rohit Goswami</title><link>https://rgoswami.me/series/r-x-nix-nexus-crafting-cohesive-environments/</link><description>Recent content in R x Nix Nexus: Crafting Cohesive Environments on Rohit Goswami</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0&lt;/a>.</copyright><lastBuildDate>Wed, 10 Jun 2020 00:12:00 +0000</lastBuildDate><atom:link href="https://rgoswami.me/series/r-x-nix-nexus-crafting-cohesive-environments/index.xml" rel="self" type="application/rss+xml"/><item><title>Emacs for Nix-R</title><link>https://rgoswami.me/posts/emacs-nix-r/</link><pubDate>Wed, 10 Jun 2020 00:12:00 +0000</pubDate><guid>https://rgoswami.me/posts/emacs-nix-r/</guid><description>A short post on my current set-up for R with nixpkgs and emacs to auto-compile my system configuration.
Background This is my third post on working with nixpkgs and R.
Part I covered ways of working effectively with R and nixpkgs Part II dealt with composing dependent devtools packages in a per-package environment, with a focus on rethinking and tidybayes.rethinking This final part is about automating the system-wide configuration using emacs.</description></item><item><title>Statistical Rethinking and Nix</title><link>https://rgoswami.me/posts/rethinking-r-nix/</link><pubDate>Sun, 07 Jun 2020 04:24:00 +0000</pubDate><guid>https://rgoswami.me/posts/rethinking-r-nix/</guid><description>This post describes how to set up a transparent automated setup for reproducible R workflows using nixpkgs, niv, and lorri. The explanatory example used throughout the post is one of setting up the rethinking package and running some examples from the excellent second edition of &amp;ldquo;Statistical Rethinking&amp;rdquo; by Richard McElreath.
Background As detailed in an earlier post1, I had set up Nix to work with non-CRAN packages. If the rest of this section is unclear, please refer back to the earlier post.</description></item><item><title>Nix with R and devtools</title><link>https://rgoswami.me/posts/nix-r-devtools/</link><pubDate>Sat, 06 Jun 2020 05:49:00 +0000</pubDate><guid>https://rgoswami.me/posts/nix-r-devtools/</guid><description>This post discusses briefly, the nix-shell environment for reproducible programming. In particular, there is an emphasis on extensions for installing and working with packages not in CRAN, i.e. packages off Github which are normally installed with devtools.
Background The entire nix ecosystem is fantastic, and is the main packaging system used by d-SEAMS as well. Recently I began working through the excellent second edition of &amp;ldquo;Statistical Rethinking&amp;rdquo; by Richard McElreath1.</description></item></channel></rss>