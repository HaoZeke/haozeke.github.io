<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>notes on Rohit Goswami</title><link>https://rgoswami.me/categories/notes/</link><description>Recent content in notes on Rohit Goswami</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0&lt;/a>.</copyright><lastBuildDate>Mon, 26 Jun 2023 21:34:00 +0000</lastBuildDate><atom:link href="https://rgoswami.me/categories/notes/index.xml" rel="self" type="application/rss+xml"/><item><title>Managing Scanned Books</title><link>https://rgoswami.me/posts/managing-scanned-books/</link><pubDate>Mon, 26 Jun 2023 21:34:00 +0000</pubDate><guid>https://rgoswami.me/posts/managing-scanned-books/</guid><description>Where I consider digitizing colored content.
Background It so happened that I recently acquired a rather unique book which (somewhat oddly) had no corresponding digital variant 1. I&amp;rsquo;ve discussed how I modify books and papers for consumption on my Kobo Aura HD in the past, but this comes before that. Much of this is essentially a plug for Scantailor Advanced 2.
Goals Starting with the initial output pdf files from a scanner&amp;rsquo;s &amp;ldquo;scan to me&amp;rdquo; function 3 the goal is to have all the bells and whistles of a well-done digital book:</description></item><item><title>Dart Sass and Hugo Themes</title><link>https://rgoswami.me/posts/dart-sass-hugo-themes/</link><pubDate>Sat, 17 Jun 2023 17:29:00 +0000</pubDate><guid>https://rgoswami.me/posts/dart-sass-hugo-themes/</guid><description>Quick notes on variables, dart-sass and hugo
Background Recently I decided that it was annoying for me as a user to not know which links on my site were internal and which led off to an external site.
Figure 1: The desired end-result, blue for internal links, purple for external links, colors chosen with ColorHexa
However, since hugo requires baseurl for generating meaningful rss and sitemap files, this meant either hardcoding the variable into my theme, or figuring out how to pass variables from my config.</description></item><item><title>Handling Legacy Fortran Code</title><link>https://rgoswami.me/posts/handling-legacy-fortran-code/</link><pubDate>Thu, 27 Apr 2023 16:09:00 +0000</pubDate><guid>https://rgoswami.me/posts/handling-legacy-fortran-code/</guid><description>A short pseudo-tutorial post on working with inherited Fortran.
Background In-spite of the many claims by upper management (e.g. at LANL) regarding the death of Fortran, most people with even a passing interest in academic research within STEM fields will interact with Fortran code, and the community has only been improving with time Kedward et al. (2022). Rewriting is not typically an option, or a good use of time. This set of posts should be applicable to any blackbox legacy fortran code, though the specific example here is one from my own field (computational chemistry).</description></item><item><title>Fortran OOP and Python</title><link>https://rgoswami.me/posts/fortran-oop-python/</link><pubDate>Mon, 09 May 2022 03:39:00 +0000</pubDate><guid>https://rgoswami.me/posts/fortran-oop-python/</guid><description>Explorations of object oriented Fortran with bind(c) derived types for representations generated by F2PY
Background Derived types are easily one of the most visible of the modern Fortran (post-F90) features and are central to object oriented programming paradigms in Fortarn.
For those new to the language, a rough guide to some terminology:
Fortran Closest C/C++ equivalent derived type struct extends type inherited class final destructor not standard conforming undefined behaviour Only the first of these are actually covered in terms of interoperability with C as of the F2018 draft standard.</description></item><item><title>Spack and PyTorch Development Workflows</title><link>https://rgoswami.me/posts/spack-pytorch-dev-workflow/</link><pubDate>Sun, 24 Apr 2022 19:16:00 +0000</pubDate><guid>https://rgoswami.me/posts/spack-pytorch-dev-workflow/</guid><description>pytorch local development environments without tears, root access or spack dev-build
Background Build systems are a bit of a nightmare. I spend most of my time SSH&amp;rsquo;ed into more powerful CPU machines, and sometimes on machines with more exotic compute devices. micromamba is typically my poison of choice where nix is not an option.
However, micromamba doesn&amp;rsquo;t allow a whole lot in the way of setting up environments which do not use packages already on conda-forge.</description></item><item><title>TinySSH for Docker Development Environments</title><link>https://rgoswami.me/posts/tinyssh-dockerdev-env/</link><pubDate>Sun, 26 Dec 2021 22:14:00 +0000</pubDate><guid>https://rgoswami.me/posts/tinyssh-dockerdev-env/</guid><description>Rootless SSH servers with TinySSH for local GitPod containers
Background act works well enough for most Github Actions workflows, until something fails in the pipeline, or interactive debugging is required. Naturally this is beyond the purview of act itself, but it is easy enough to set up shop with a project&amp;rsquo;s GitPod docker image being used. For the purposes of the post we&amp;rsquo;ll consider numpy.
1docker run -v $(pwd):/home/gitpod/f2py_skel --name f2py_npdev -it numpy/numpy-dev:latest docker attach can be used in tandem with docker stop and docker start, but these have the disadvantage of only providing one synchronous view of the machine.</description></item><item><title>Revisiting Wayland for ArchLinux</title><link>https://rgoswami.me/posts/revisiting-wayland-2021-archlinux/</link><pubDate>Fri, 24 Dec 2021 18:13:00 +0000</pubDate><guid>https://rgoswami.me/posts/revisiting-wayland-2021-archlinux/</guid><description>Ruminating on wayland and sway for daily use with ArchLinux
Background Many years ago, I found time to make an attempt to switch away from the X11 Window system to Wayland. At the time, I ended up switching back to Xorg, but I did want to revisit it. Since I returned from home recently and was gifted a Gen 6 ThinkPad X1 Carbon, I had a perfect opportunity to do so 1.</description></item><item><title>Exploring ISO_C_BINDING and type-bound procedures</title><link>https://rgoswami.me/posts/iso-c-type-bound-fortran/</link><pubDate>Sun, 19 Dec 2021 16:25:00 +0000</pubDate><guid>https://rgoswami.me/posts/iso-c-type-bound-fortran/</guid><description>A closer look at the standard Fortran C compatibility layer by exploring objects and linkers
Background Derived types and their interoperability have been covered previously in the context of usage from Python. However, much of the focus of the previous approach revolved around the iso_c_binding intrinsic module. A closer inspection of the functionality provided therein is the first step towards extending beyond the standards to support calling type bound procedures.</description></item><item><title>Simple Fortran Derived Types and Python</title><link>https://rgoswami.me/posts/cython-derivedtype-f2py/</link><pubDate>Sat, 02 Oct 2021 04:19:00 +0000</pubDate><guid>https://rgoswami.me/posts/cython-derivedtype-f2py/</guid><description>Moving simple Fortran derived types to Python and back via C
Background Object oriented programming has been part of Fortran for longer than I have been alive 1. Fortran has derived types now. They&amp;rsquo;ve been around for around for over three decades. The standards at the same time, have been supporting more and more interoperable operations. Details of these pleasant historical improvements are pretty much the most the Fortran standards committee have managed to date in the 21st century.</description></item><item><title>NumPy, Meson and f2py</title><link>https://rgoswami.me/posts/numpy-meson-f2py/</link><pubDate>Thu, 23 Sep 2021 05:45:00 +0000</pubDate><guid>https://rgoswami.me/posts/numpy-meson-f2py/</guid><description>Exploring meson for interfacing fortran and python via f2py and standard techniques, with benchmarks.
Background A recent post gauging community interest in f2py brought to light (among other aspects) the fact that the build systems of f2py are rather opaque to the end user. There are good reasons for this, since many of the tools discussed in this post were not around / in any shape to be used during the active development of f2py1.</description></item><item><title>GSoC21 LFortran and Computational Chemistry</title><link>https://rgoswami.me/posts/gsoc21-fin-reprot/</link><pubDate>Fri, 20 Aug 2021 00:43:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-fin-reprot/</guid><description>Directed recollections of the GSoC21 timeline
Background If the last ten weeks of weekly posts have not made it clear; as a student developer in the Google Summer of Code in the year 2021; I was privileged to work on the LFortran compiler alongside Gagandeep Singh and Thirumalai Shaktivel under the fantastic mentorship of Ondřej Čertík under the Fortran-Lang organization.
Series This post is going to be generally expositionary in tone; but the series is also reproduced.</description></item><item><title>GSoC21 W10: LFortran Runtime Library Design</title><link>https://rgoswami.me/posts/gsoc21-w10/</link><pubDate>Sat, 14 Aug 2021 00:28:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w10/</guid><description>The road to accurate elementary intrinsic functions is paved with IEEE/ISO standards
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Series This post is part of a series based around my weekly GSoC21 project check-ins.
GSoC21 W1: LFortran Kickoff GSoC21 W2: LFortran Unraveling GSoC21 W3: Kind, Characters, and Standards GSoC21 W4: LFortran, Backends and Bugs GSoC21 W5: LFortran Design Details and minidftatom GSoC21 W6: LFortran ASR and Values GSoC21 W7: LFortran Workflow Basics GSoC21 W8: LFortran Refactors, and Compile Time Evaluations GSoC21 W9: LFortran Bug Hunting Bonanza GSoC21 W10: LFortran Runtime Library Design &amp;lt;&amp;ndash; You are here!</description></item><item><title>GSoC21 W9: LFortran Bug Hunting Bonanza</title><link>https://rgoswami.me/posts/gsoc21-w9/</link><pubDate>Fri, 06 Aug 2021 19:50:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w9/</guid><description>Continuing compile time intrinsic functions, ASR passes, and testing LAPACK
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Series This post is part of a series based around my weekly GSoC21 project check-ins.
GSoC21 W1: LFortran Kickoff GSoC21 W2: LFortran Unraveling GSoC21 W3: Kind, Characters, and Standards GSoC21 W4: LFortran, Backends and Bugs GSoC21 W5: LFortran Design Details and minidftatom GSoC21 W6: LFortran ASR and Values GSoC21 W7: LFortran Workflow Basics GSoC21 W8: LFortran Refactors, and Compile Time Evaluations GSoC21 W9: LFortran Bug Hunting Bonanza &amp;lt;&amp;ndash; You are here!</description></item><item><title>GSoC21 W8: LFortran Refactors, and Compile Time Evaluations</title><link>https://rgoswami.me/posts/gsoc21-w8/</link><pubDate>Fri, 30 Jul 2021 17:11:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w8/</guid><description>Language standardese and implementations
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Series This post is part of a series based around my weekly GSoC21 project check-ins.
GSoC21 W1: LFortran Kickoff GSoC21 W2: LFortran Unraveling GSoC21 W3: Kind, Characters, and Standards GSoC21 W4: LFortran, Backends and Bugs GSoC21 W5: LFortran Design Details and minidftatom GSoC21 W6: LFortran ASR and Values GSoC21 W7: LFortran Workflow Basics GSoC21 W8: LFortran Refactors, and Compile Time Evaluations &amp;lt;&amp;ndash; You are here!</description></item><item><title>GSoC21 W7: LFortran Workflow Basics</title><link>https://rgoswami.me/posts/gsoc21-w7/</link><pubDate>Fri, 23 Jul 2021 22:33:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w7/</guid><description>Revisiting minidftatom and a birds eye view of lfortran
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Series This post is part of a series based around my weekly GSoC21 project check-ins.
GSoC21 W1: LFortran Kickoff GSoC21 W2: LFortran Unraveling GSoC21 W3: Kind, Characters, and Standards GSoC21 W4: LFortran, Backends and Bugs GSoC21 W5: LFortran Design Details and minidftatom GSoC21 W6: LFortran ASR and Values GSoC21 W7: LFortran Workflow Basics &amp;lt;&amp;ndash; You are here!</description></item><item><title>GSoC21 W6: LFortran ASR and Values</title><link>https://rgoswami.me/posts/gsoc21-w6/</link><pubDate>Fri, 16 Jul 2021 17:19:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w6/</guid><description>Enriching ASR nodes at compile time
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Series This post is part of a series based around my weekly GSoC21 project check-ins.
GSoC21 W1: LFortran Kickoff
GSoC21 W2: LFortran Unraveling
GSoC21 W3: Kind, Characters, and Standards
GSoC21 W4: LFortran, Backends and Bugs
GSoC21 W5: LFortran Design Details and minidftatom
GSoC21 W6: LFortran ASR and Values &amp;lt;&amp;ndash; You are here!</description></item><item><title>GSoC21 W5: LFortran Design Details and minidftatom</title><link>https://rgoswami.me/posts/gsoc21-w5/</link><pubDate>Fri, 09 Jul 2021 19:23:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w5/</guid><description>Project scaffolding and compiler design
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Series This post is part of a series based around my weekly GSoC21 project check-ins.
GSoC21 W1: LFortran Kickoff
GSoC21 W2: LFortran Unraveling
GSoC21 W3: Kind, Characters, and Standards
GSoC21 W4: LFortran, Backends and Bugs
GSoC21 W5: LFortran Design Details and minidftatom &amp;lt;&amp;ndash; You are here!</description></item><item><title>GSoC21 W4: LFortran, Backends and Bugs</title><link>https://rgoswami.me/posts/gsoc21-w4/</link><pubDate>Fri, 02 Jul 2021 23:26:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w4/</guid><description>Towards the mid-summer evaluation and redirecting efforts
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Series This post is part of a series based around my weekly GSoC21 project check-ins.
GSoC21 W1: LFortran Kickoff
GSoC21 W2: LFortran Unraveling
GSoC21 W3: Kind, Characters, and Standards
GSoC21 W4: LFortran, Backends and Bugs &amp;lt;&amp;ndash; You are here!
GSoC21 W5: LFortran Design Details and minidftatom</description></item><item><title>GSoC21 W3: Kind, Characters, and Standards</title><link>https://rgoswami.me/posts/gsoc21-w3/</link><pubDate>Sat, 26 Jun 2021 00:28:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w3/</guid><description>Standard practice pragmatic approaches to kind for dftatom
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Series This post is part of a series based around my weekly GSoC21 project check-ins.
GSoC21 W1: LFortran Kickoff
GSoC21 W2: LFortran Unraveling
GSoC21 W3: Kind, Characters, and Standards &amp;lt;&amp;ndash; You are here!
GSoC21 W4: LFortran, Backends and Bugs
GSoC21 W5: LFortran Design Details and minidftatom</description></item><item><title>GSoC21 W2: LFortran Unraveling</title><link>https://rgoswami.me/posts/gsoc21-w2/</link><pubDate>Fri, 18 Jun 2021 18:59:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w2/</guid><description>Delving into language standards and back-ends for lfortran
Background As discussed in a previous post in this series, I have been spending roughly half of each working day with LFortran as part of the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Series This post is part of a series based around my weekly GSoC21 project check-ins.
GSoC21 W1: LFortran Kickoff
GSoC21 W2: LFortran Unraveling &amp;lt;&amp;ndash; You are here!</description></item><item><title>GSoC21 W1: LFortran Kickoff</title><link>https://rgoswami.me/posts/gsoc21-w1/</link><pubDate>Sat, 12 Jun 2021 00:57:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w1/</guid><description>Charting paths towards concrete lfortran usage
Background As mentioned in an earlier post, I have had the immense pleasure of continuing development of the disruptive lfortran compiler under the aegis of the Fortran Lang organization, financed by the Google Summer of Code and mentored ably by Ondrej Certik. A rather interesting consequence of this is that we are strongly encouraged to write a precis of our activities each week. This is mine, given that the clock starting winding down (full timeline) last Monday.</description></item><item><title>Biblatex to Bibtex for Sphinx</title><link>https://rgoswami.me/posts/zotero-biblatex-bibtex/</link><pubDate>Sun, 23 May 2021 05:37:00 +0000</pubDate><guid>https://rgoswami.me/posts/zotero-biblatex-bibtex/</guid><description>Background Transitioning from biblatex to bibtex with biber for sphinx
I recently started a set of notes using jupyter-book. However, in the process I ran into a horrific bibliography related SNAFU. sphinx in its infinite wisdom only accepts a rather odd subset of bibtex.
I have been happily exporting my giant bibliography with Zotero (and better bibtex) exporting my references as biblatex while sphinx started choking dreadfully. This post describes attempts to reconcile the biblatex sources without manual intervention.</description></item><item><title>Wrapping Up Code in Place 2021</title><link>https://rgoswami.me/posts/cip2021-fin/</link><pubDate>Fri, 21 May 2021 02:29:00 +0000</pubDate><guid>https://rgoswami.me/posts/cip2021-fin/</guid><description>Short recollections of the second iteration of CIP; the course with the largest teaching (and voluntary) staff bringing the joy of programming to thousands
Background Last year in 2020, as a section leader for the Stanford Code in Place initiative (which generated a series of posts), I was able to hone my teaching skills and bask in the reflected glory of many talented students who were in my Code in Place section.</description></item><item><title>Private Github Actions without PAT</title><link>https://rgoswami.me/posts/priv-gh-actions/</link><pubDate>Wed, 23 Dec 2020 14:34:00 +0000</pubDate><guid>https://rgoswami.me/posts/priv-gh-actions/</guid><description>A workflow for managing private submodules in a private repository without personal access tokens for Github actions
Background Ever since Travis CI decided to drink corporate kool-aid, the search for a new CI has been brought to the fore again. Github Actions seem uniquely suited for private repositories, since most CIs bill for private repos. However, the basic authentication setup for the checkout action involves using one SSH key, effectively a personal access token, for both the main project and all submodules.</description></item><item><title>Replacing Zoom with Open Broadcaster Software</title><link>https://rgoswami.me/posts/rep-zoom-obs/</link><pubDate>Sat, 03 Oct 2020 17:05:00 +0000</pubDate><guid>https://rgoswami.me/posts/rep-zoom-obs/</guid><description>A post on local recordings
Background Since the advent of the COVID-19 situation, there has been an increase in the demand for recorded materials. Standard approaches involve Zoom, which is not only proprietary, but also quite a bit of a privacy nightmare. The last straw was the random placement of my speaker bauble head.
Figure 1: Zoom webcam placement
At this point, given that I was to set up a pre-recorded video for PyCon India 2020, I decided to look into alternatives.</description></item><item><title>Explorations with Backlight Controllers</title><link>https://rgoswami.me/posts/expl-backlight-control/</link><pubDate>Sat, 01 Aug 2020 20:00:00 +0000</pubDate><guid>https://rgoswami.me/posts/expl-backlight-control/</guid><description>A short post detailing the many trials and tribulations of setting brightness on multiple monitors in tandem.
Background As regular readers might know, I have a multi-screen setup, which accounts for having touch enabled on my primary laptop screen (detailed here). A failing of this setup was that I was not able to control the brightness of both monitors at the same time.
Existing Stack Since I use i3, my brightness control is simply done with bindsym lines as follows1:</description></item><item><title>Multiple Monitors with Touchscreens</title><link>https://rgoswami.me/posts/multi-monitor-touch/</link><pubDate>Sat, 11 Jul 2020 22:45:00 +0000</pubDate><guid>https://rgoswami.me/posts/multi-monitor-touch/</guid><description>A short tutorial post on multiple screens for laptops with touch-support and ArchLinux. Also evolved into a long rant, with an Easter egg.
Background Of late, I have been attempting to move away from paper, for environmental reasons1. Years of touch typing in Colemak (rationale, config changes) and a very customized Emacs setup (including mathematica, temporary latex templates, Nix, and org-roam annotations) have more or less kept me away from analog devices.</description></item><item><title>Analytics II: Goat to Clicky</title><link>https://rgoswami.me/posts/goat-clicky/</link><pubDate>Mon, 06 Jul 2020 23:09:00 +0000</pubDate><guid>https://rgoswami.me/posts/goat-clicky/</guid><description>A follow up to my earlier post on analytics, and on migrating from Goat Counter to Clicky.
Background A few days ago I recieved the following email:
Hi there!
I made some changes to the GoatCounter plans/pricing:
GoatCounter now has a &amp;ldquo;Starter&amp;rdquo; plan, this is €5/month, limited to 100k pageviews/month, comes with a custom domain, and allow commercial use. This is mostly the same as the &amp;ldquo;personal plus&amp;rdquo; plan there was before, except that it allows commercial use.</description></item><item><title>LosslessCut, Zoom and an AMA for CS106A</title><link>https://rgoswami.me/posts/losslesscut-zoom-ama/</link><pubDate>Wed, 20 May 2020 20:21:00 +0000</pubDate><guid>https://rgoswami.me/posts/losslesscut-zoom-ama/</guid><description>Background I recently had the opportunity to take part in an AMA (ask me anything) session for the CS106A students on Machine Learning for the Physical Sciences. This is a post about the technical issues, and also includes a video if you read through.
Zoom and LosslessCut Zoom recordings are one of the nicer ways to deal with switching windows and screen sharing, especially after fixing the dark screen glitch. However, though LosslessCut works really well to get cut-points, exporting and merging the file into one caused a bunch of glitches.</description></item><item><title>Compton to Picom and Zoom Glitches</title><link>https://rgoswami.me/posts/compton-zoom-shadow/</link><pubDate>Tue, 12 May 2020 01:32:00 +0000</pubDate><guid>https://rgoswami.me/posts/compton-zoom-shadow/</guid><description>Background I have been leading the fantastic section 881 as a virtual section leader for the Stanford CS106A: Code in Place initiative for the past four weeks. I have also spent a lot of time on Zoom, sharing my screen. Fun fact. My screen shares look like this:
Figure 1: Zoom screen share with weird overlay
This post is about hunting down what caused this amazing zoom glitch1 and how I finally fixed it.</description></item><item><title>CS106A Small Group Training</title><link>https://rgoswami.me/posts/scp-smallgrp-trainig/</link><pubDate>Wed, 22 Apr 2020 07:01:00 +0000</pubDate><guid>https://rgoswami.me/posts/scp-smallgrp-trainig/</guid><description>Background As I mentioned earlier, I&amp;rsquo;m leading a section for Stanford CS106A: Code in Place. This post relates to the notes and thoughts garnered during the small group training session1.
Reflections Demographics Redacted. Did not use breakout meetings due to privacy issues.
Engagement and Participation Some people were more active (skewed responses) Some of the more rudimentary questions might have been suppressed Highlighted Moments Covering multiple perspectives Different mental models Challenges and Transformations Technical debt was an issue Lack of engagement Went on for too long For me in particular:</description></item><item><title>CS106A Section Meeting I</title><link>https://rgoswami.me/posts/scp-smallgrp-meet1/</link><pubDate>Fri, 17 Apr 2020 22:54:00 +0000</pubDate><guid>https://rgoswami.me/posts/scp-smallgrp-meet1/</guid><description>Background As I mentioned earlier, I&amp;rsquo;m leading a section for Stanford CS106A: Code in Place. I did also mention I&amp;rsquo;d try to keep a set of short notes on the process. I finally had my first section meeting!
Preparation I went through the following:
Sent out a welcome message Detailed the workflow Set up a HackMD instance Set up some slides in beamer1 However, after that, I was still concerned since I didn&amp;rsquo;t get much of a response on the ice-breakers for EdStem.</description></item><item><title>Small Section On-boarding</title><link>https://rgoswami.me/posts/scp-smallgrp/</link><pubDate>Tue, 14 Apr 2020 02:48:00 +0000</pubDate><guid>https://rgoswami.me/posts/scp-smallgrp/</guid><description>Background As I mentioned in my last post, I&amp;rsquo;m leading a section for Stanford CS106A: Code in Place. I did also mention I&amp;rsquo;d try to keep a set of short notes on the process. So there1.
The Training Given the overwhelming number of students, and section leaders, the small groups are for fostering a community of teachers.
Consider allowing for daisy chaining during introductions Discussions are the primary take-away Only the instructor should be coding during the session Core components Clarity Content Atmosphere Section management Correctness Sectional Details Check in at the start Notice the space Check in regularly Avoid negative phrases Establish norms and the general culture Zoom Norms Have people introduce themselves Mute people when they aren&amp;rsquo;t talking Raise hands Try to use icebreakers which respect privacy Materials Here&amp;rsquo;s some of the stuff which, being as it was open-sourced, I suppose is OK to put here2.</description></item><item><title>On-boarding for Code in Place</title><link>https://rgoswami.me/posts/scp-onboarding/</link><pubDate>Fri, 10 Apr 2020 16:01:00 +0000</pubDate><guid>https://rgoswami.me/posts/scp-onboarding/</guid><description>Background A few weeks ago, I ended up recording a video for the Stanford CS106A: Code in Place initiative (which can be found here). I heard back a while ago, and am now to lead a section for the course!
I&amp;rsquo;ll probably be making a series of short posts as this process continues.
On-Boarding This was very reminiscent of the Carpentries instructor training, which makes sense, given how well thought out that experience was.</description></item><item><title>Analytics: Google to Goat</title><link>https://rgoswami.me/posts/goat-google/</link><pubDate>Thu, 09 Apr 2020 17:17:00 +0000</pubDate><guid>https://rgoswami.me/posts/goat-google/</guid><description>Background Like a lot of my tech based rants, this was brought on by a recent Hacker News post. I won&amp;rsquo;t go into why the product listed there is a hollow faux FOSS rip-off. I won&amp;rsquo;t discuss how the &amp;lsquo;free&amp;rsquo; analytics option, like many others are just hobby projects taking pot shots at other projects. Or how insanely overpriced most alternatives are.
I will however discuss why and how I transitioned to using the awesome Goat Counter.</description></item><item><title>Trees and Bags</title><link>https://rgoswami.me/posts/trees-and-bags/</link><pubDate>Thu, 26 Mar 2020 00:28:00 +0000</pubDate><guid>https://rgoswami.me/posts/trees-and-bags/</guid><description>Explain why using bagging for prediction trees generally improves predictions over regular prediction trees.
Introduction Bagging (or Bootstrap Aggregation) is one of the most commonly used ensemble method for improving the prediction of trees. We will broadly follow a historical development trend to understand the process. That is, we will begin by considering the Bootstrap method. This in turn requires knowledge of the Jacknife method, which is understandable from a simple bias variance perspective.</description></item><item><title>D3 for Git</title><link>https://rgoswami.me/posts/d3git/</link><pubDate>Mon, 16 Mar 2020 00:17:00 +0000</pubDate><guid>https://rgoswami.me/posts/d3git/</guid><description>Background I have had a lot of discussions regarding the teaching of git This is mostly as a part of the SoftwareCarpentries, or in view of my involvement with univ.ai, or simply in every public space I am associated with Without getting into my views, I just wanted to keep this resource in mind The site Learning git is a highly contentious thing People seem to be fond of GUI tools, especially since on non *nix systems, it seems that there is a lot of debate surrounding obtaining the git utility in the first place One of the best ways of understanding (without installing stuff) the mental models required for working with git is this site</description></item><item><title>Shorter Posts</title><link>https://rgoswami.me/posts/shortpost/</link><pubDate>Mon, 16 Mar 2020 00:16:00 +0000</pubDate><guid>https://rgoswami.me/posts/shortpost/</guid><description>Background Sometime this year, I realized that I no longer have access to a lot of my older communication. This included, a lot of resources I enjoyed and shared with the people who were around me at that point in time. To counter this, I have decided to opt for shorter posts, even if they don&amp;rsquo;t always include the same level of detail I would prefer to provide.
Alternatives I have an automated system based around IFTTT combined with Twitter, Diigo, and even Pocket However, that doesn&amp;rsquo;t really tell me much, and trawling through a massive glut of data is often pointless as well There&amp;rsquo;s always Twitter, but I don&amp;rsquo;t really care to hear the views of others when I want to revisit my own ideas Conclusions I will be making shorter posts here, like the random one on octobox</description></item><item><title>Taming Github Notifications</title><link>https://rgoswami.me/posts/ghnotif/</link><pubDate>Wed, 12 Feb 2020 11:36:00 +0000</pubDate><guid>https://rgoswami.me/posts/ghnotif/</guid><description>Background As a member of several large organizations, I get a lot of github notifications. Not all of these are of relevance to me. This is especially true of psuedo-monorepo style repositories like the JOSS review system and especially the exercism community.
I recently (re-)joined the exercism community as a maintainer for the C++ lessons after having been a (sporadic) teacher This was largely in response to a community call to action as the group needed new blood to usher in v3 of the exercism project Anyway, I have since found that at the small cost of possibly much of my public repo data, I can manage my notifications better with Octobox</description></item></channel></rss>