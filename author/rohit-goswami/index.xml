<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rohit Goswami</title><link>https://rgoswami.me/author/rohit-goswami/</link><description>Recent content on Rohit Goswami</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0&lt;/a>.</copyright><lastBuildDate>Sun, 19 Dec 2021 16:25:00 +0000</lastBuildDate><atom:link href="https://rgoswami.me/author/rohit-goswami/index.xml" rel="self" type="application/rss+xml"/><item><title>Exploring ISO_C_BINDING and type-bound procedures</title><link>https://rgoswami.me/posts/iso-c-type-bound-fortran/</link><pubDate>Sun, 19 Dec 2021 16:25:00 +0000</pubDate><guid>https://rgoswami.me/posts/iso-c-type-bound-fortran/</guid><description>A closer look at the standard Fortran C compatibility layer by exploring objects and linkers
Background Derived types and their interoperability have been covered previously in the context of usage from Python. However, much of the focus of the previous approach revolved around the iso_c_binding intrinsic module. A closer inspection of the functionality provided therein is the first step towards extending beyond the standards to support calling type bound procedures.</description></item><item><title>Docker Development Envs</title><link>https://rgoswami.me/snippets/docker-dev-envs/</link><pubDate>Wed, 24 Nov 2021 16:20:00 +0000</pubDate><guid>https://rgoswami.me/snippets/docker-dev-envs/</guid><description>Very quick set of ugly commands to grab build environments. A much better approach is to make a custom Dockerfile or even better, use nix.
However it does work in a pinch.
docker pull IMG:TAG sudo docker run -v LOCALDIR:DIRINDOCKER -it debian:experimental-20211115 bash # Don&amp;#39;t be root for long apt update apt install sudo vim zsh # Use the same username --&amp;gt; easier to manage permissions useradd -m -s /bin/zsh $USER -G sudo passwd $USER # Some crap # Or just add to the sudoers file echo &amp;#34;$USERALL=(ALL:ALL) ALL&amp;#34; &amp;gt;&amp;gt; /etc/sudoers su $USER # numpy stuff sudo apt install gcc gfortran libopenblas-dev python3.</description></item><item><title>Snippets</title><link>https://rgoswami.me/snippets/</link><pubDate>Wed, 24 Nov 2021 16:20:00 +0000</pubDate><guid>https://rgoswami.me/snippets/</guid><description>This collection consists of a series of snippets which are not particularly long enough or interesting enough to be a post. However, they are frequently used by me, and thus deserve a spot somewhere.</description></item><item><title>SSH Port Forwarding</title><link>https://rgoswami.me/snippets/ssh-port-forwarding/</link><pubDate>Wed, 24 Nov 2021 16:20:00 +0000</pubDate><guid>https://rgoswami.me/snippets/ssh-port-forwarding/</guid><description>Whenever I need to access a server running on an HPC which does not support ngrok or localtunnel or even gsocket; the fallback approach is always to rely on SSH port forwarding.
The sample problem here is running an HTTP server for viewing graphics in R via httpgd.
# Local export PORT=9899 &amp;amp;&amp;amp; ssh -L &amp;#34;${PORT}:localhost:${PORT}&amp;#34; &amp;#34;rog32@krafla.rhi.hi.is&amp;#34; -N -L &amp;#34;${PORT}:localhost:${PORT}&amp;#34; elja # New tab ssh krafla ssh elja radian # or R Now in R.</description></item><item><title>Simple Fortran Derived Types and Python</title><link>https://rgoswami.me/posts/cython-derivedtype-f2py/</link><pubDate>Sat, 02 Oct 2021 04:19:00 +0000</pubDate><guid>https://rgoswami.me/posts/cython-derivedtype-f2py/</guid><description>Moving simple Fortran derived types to Python and back via C
Background Object oriented programming has been part of Fortran for longer than I have been alive 1. Fortran has derived types now. They&amp;rsquo;ve been around for around for over three decades. The standards at the same time, have been supporting more and more interoperable operations. Details of these pleasant historical improvements are pretty much the most the Fortran standards committee have managed to date in the 21st century.</description></item><item><title>Presentation Supplements for FortranCon'21</title><link>https://rgoswami.me/posts/fortrancon-2021-meta/</link><pubDate>Fri, 24 Sep 2021 01:37:00 +0000</pubDate><guid>https://rgoswami.me/posts/fortrancon-2021-meta/</guid><description>A meta-post on twin presentations on F2PY and LFortran at FortranCon'21
Background I had the honor and pleasure to have two presentations at the second annual FortranCon in 2021. The fun part was both talks featured the language standard prominently, but were meant to form two sides of a coin.
f2py: Two Decades Later Co-Authors Dr. Ralf Gommers (Quansight Labs), Dr. Melissa Mendonca (Quansight Labs), Dr. Pearu Peterson (Quansight Labs) Duration 20 minutes (15 + 5) Abstract f2py is the gold standard for interfacing Fortran and Python.</description></item><item><title>NumPy, Meson and f2py</title><link>https://rgoswami.me/posts/numpy-meson-f2py/</link><pubDate>Thu, 23 Sep 2021 05:45:00 +0000</pubDate><guid>https://rgoswami.me/posts/numpy-meson-f2py/</guid><description>Exploring meson for interfacing fortran and python via f2py and standard techniques, with benchmarks.
Background A recent post gauging community interest in f2py brought to light (among other aspects) the fact that the build systems of f2py are rather opaque to the end user. There are good reasons for this, since many of the tools discussed in this post were not around / in any shape to be used during the active development of f2py1.</description></item><item><title>Programming Language Management</title><link>https://rgoswami.me/snippets/prog-lang-man/</link><pubDate>Sun, 19 Sep 2021 17:39:00 +0000</pubDate><guid>https://rgoswami.me/snippets/prog-lang-man/</guid><description>nix aside1, I recently shifted to using asdf to manage different language versions.
git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.8.1 The main reason to prefer asdf over competing language specific options like rvm or pyenv or nvm and company is simply uniformity of the interface. This can be coupled with zinit snippet OMZ::plugins/asdf for loading the completions. Note that the installation steps can take a while especially if openssl is being installed.</description></item><item><title>Watching Files</title><link>https://rgoswami.me/snippets/watch-files/</link><pubDate>Sun, 19 Sep 2021 17:39:00 +0000</pubDate><guid>https://rgoswami.me/snippets/watch-files/</guid><description>My personal favorite for watching files and running context sensitive commands is to use the lovely filewatcher CLI utility written in Ruby.
gem install filewatcher gem install filewatcher-cli This can then be used with:
filewatcher &amp;#39;**/*.js&amp;#39; &amp;#39;node $FILENAME&amp;#39; However this hasn&amp;rsquo;t been updated in a while now and fails on newer versions of Ruby. So now I use watchexec.
cargo install watchexec-cli watchexec -w source/f2py &amp;#39;make html&amp;#39;</description></item><item><title>Presentation Supplements for Greens Function School</title><link>https://rgoswami.me/posts/leshouches-2021-meta/</link><pubDate>Fri, 10 Sep 2021 13:12:00 +0000</pubDate><guid>https://rgoswami.me/posts/leshouches-2021-meta/</guid><description>A meta-post on an oral presentation around Fortran and languages
Background I was a participant at the 2021 Les Houches school of physics on &amp;ldquo;Green&amp;rsquo;s function approach to multiple scattering theory in electronic structure and spectroscopies&amp;rdquo;. I opted to give a student talk on programming languages and elementary functions as a cautionary tale for IEEE 754.
Details Title Programming Language Interstices Abstract In this short talk I will discuss the changing landscape of programming languages from the viewpoint of “mixed language” bindings.</description></item><item><title>Regarding Quansight Labs</title><link>https://rgoswami.me/posts/joining-quansight-labs21/</link><pubDate>Sun, 29 Aug 2021 02:05:00 +0000</pubDate><guid>https://rgoswami.me/posts/joining-quansight-labs21/</guid><description>Towards sustainable FOSS with Quansight Labs
Background Rumors of my affiliation with Quansight Labs are indeed true. I have had the pleasure of joining the Labs division as a software engineer 1, whose philosophy is fantastically and succintly described by their director Dr. Ralf Gommers. This means, in nutshell, that in my spare time I will be able to contribute to the continued maintenance of key FOSS projects.</description></item><item><title>GSoC21 LFortran and Computational Chemistry</title><link>https://rgoswami.me/posts/gsoc21-fin-reprot/</link><pubDate>Fri, 20 Aug 2021 00:43:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-fin-reprot/</guid><description>Directed recollections of the GSoC21 timeline
Background If the last ten weeks of weekly posts have not made it clear; as a student developer in the Google Summer of Code in the year 2021; I was privileged to work on the LFortran compiler alongside Gagandeep Singh and Thirumalai Shaktivel under the fantastic mentorship of Ondřej Čertík under the Fortran-Lang organization.
Series This post is going to be generally expositionary in tone; but the series is also reproduced.</description></item><item><title>GSoC21 W10: LFortran Runtime Library Design</title><link>https://rgoswami.me/posts/gsoc21-w10/</link><pubDate>Sat, 14 Aug 2021 00:28:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w10/</guid><description>The road to accurate elementary intrinsic functions is paved with IEEE/ISO standards
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Series This post is part of a series based around my weekly GSoC21 project check-ins.
GSoC21 W1: LFortran Kickoff GSoC21 W2: LFortran Unraveling GSoC21 W3: Kind, Characters, and Standards GSoC21 W4: LFortran, Backends and Bugs GSoC21 W5: LFortran Design Details and minidftatom GSoC21 W6: LFortran ASR and Values GSoC21 W7: LFortran Workflow Basics GSoC21 W8: LFortran Refactors, and Compile Time Evaluations GSoC21 W9: LFortran Bug Hunting Bonanza GSoC21 W10: LFortran Runtime Library Design &amp;lt;&amp;ndash; You are here!</description></item><item><title>42nd Annual Confereence of the Tex Users Group</title><link>https://rgoswami.me/posts/tug-2021-meta/</link><pubDate>Sat, 07 Aug 2021 15:39:00 +0000</pubDate><guid>https://rgoswami.me/posts/tug-2021-meta/</guid><description>A meta-post on social events and my presentation at TUG21
Background Much the same as the rationale behind my other presentation meta-posts, but with some added shilling; since TUG is fantastic. Plus like the last year, I was gven the opportunity to coordiate social events with Jennifer Claudio.
Social Events Since the 41st TUG in 2020; there is a Zulip instance which is active all year round 1 Can be joined here This year there was a Topia instance for more &amp;ldquo;pseudo-real&amp;rdquo; interactions Details sent to people who registered (free) Slides Title Continuous Integration and TeX with Org-Mode In this talk I would like to introduce the usage of TeX and templates along with generating ad-hoc class and style files for working with orgmode.</description></item><item><title>GSoC21 W9: LFortran Bug Hunting Bonanza</title><link>https://rgoswami.me/posts/gsoc21-w9/</link><pubDate>Fri, 06 Aug 2021 19:50:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w9/</guid><description>Continuing compile time intrinsic functions, ASR passes, and testing LAPACK
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Series This post is part of a series based around my weekly GSoC21 project check-ins.
GSoC21 W1: LFortran Kickoff GSoC21 W2: LFortran Unraveling GSoC21 W3: Kind, Characters, and Standards GSoC21 W4: LFortran, Backends and Bugs GSoC21 W5: LFortran Design Details and minidftatom GSoC21 W6: LFortran ASR and Values GSoC21 W7: LFortran Workflow Basics GSoC21 W8: LFortran Refactors, and Compile Time Evaluations GSoC21 W9: LFortran Bug Hunting Bonanza &amp;lt;&amp;ndash; You are here!</description></item><item><title>GSoC21 W8: LFortran Refactors, and Compile Time Evaluations</title><link>https://rgoswami.me/posts/gsoc21-w8/</link><pubDate>Fri, 30 Jul 2021 17:11:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w8/</guid><description>Language standardese and implementations
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Series This post is part of a series based around my weekly GSoC21 project check-ins.
GSoC21 W1: LFortran Kickoff GSoC21 W2: LFortran Unraveling GSoC21 W3: Kind, Characters, and Standards GSoC21 W4: LFortran, Backends and Bugs GSoC21 W5: LFortran Design Details and minidftatom GSoC21 W6: LFortran ASR and Values GSoC21 W7: LFortran Workflow Basics GSoC21 W8: LFortran Refactors, and Compile Time Evaluations &amp;lt;&amp;ndash; You are here!</description></item><item><title>JuliaCon and Remote Machines</title><link>https://rgoswami.me/posts/juliacon-remote-machines/</link><pubDate>Sun, 25 Jul 2021 01:40:00 +0000</pubDate><guid>https://rgoswami.me/posts/juliacon-remote-machines/</guid><description>Leveraging better machines for Jupyter-Julia workshops
Background I haven&amp;rsquo;t ever actually worked with julia before, however, some of the talks and workshops at this year&amp;rsquo;s Juliacon'21 were of great (applied) interest to me so I decided to follow along. In doing so, since my laptop is woefully inadequate for working through some of the materials (DFT), I decided to augment the installation instructions with remote machine usage notes.</description></item><item><title>GSoC21 W7: LFortran Workflow Basics</title><link>https://rgoswami.me/posts/gsoc21-w7/</link><pubDate>Fri, 23 Jul 2021 22:33:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w7/</guid><description>Revisiting minidftatom and a birds eye view of lfortran
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Series This post is part of a series based around my weekly GSoC21 project check-ins.
GSoC21 W1: LFortran Kickoff GSoC21 W2: LFortran Unraveling GSoC21 W3: Kind, Characters, and Standards GSoC21 W4: LFortran, Backends and Bugs GSoC21 W5: LFortran Design Details and minidftatom GSoC21 W6: LFortran ASR and Values GSoC21 W7: LFortran Workflow Basics &amp;lt;&amp;ndash; You are here!</description></item><item><title>Remapping Keys for ColemakVIM on MacOS</title><link>https://rgoswami.me/posts/keybindings-colevimhz-macos/</link><pubDate>Fri, 23 Jul 2021 04:45:00 +0000</pubDate><guid>https://rgoswami.me/posts/keybindings-colevimhz-macos/</guid><description>Struggling to emulate klfc for VIM Colemak bindings on Darwin (macOS) systems with Hammerspoon and Karabiner
Background I have mentioned in the past my customized Colemak dotfiles which I used with a customized keyboard layout. Unfortunately, the .keylayout system of MacOS is far more primitive than the elegant klfc setup 1. For an understanding of what we are trying to get at, the following poorly made video will suffice.</description></item><item><title>Nix, Channels and the NUR</title><link>https://rgoswami.me/posts/nix-channel-nur/</link><pubDate>Wed, 21 Jul 2021 02:01:00 +0000</pubDate><guid>https://rgoswami.me/posts/nix-channel-nur/</guid><description>A short exploration of multi-user nix and interacting with the Nix User Repository without root
Background For multi-user nix installations 1, the NIX_PATH variable is empty. Here I briefly go over two approaches to mitigate this, one with nix-channel and the other by manual pinning. Note that this post will eventually be superseded for most cases by a better flake workflow.
Channels The idea behind using a channel is essentially that the tar at a particular commit / tag will be downloaded and stored, typically at $HOME/.</description></item><item><title>Doom Emacs and Language Servers</title><link>https://rgoswami.me/posts/emacs-lang-servers/</link><pubDate>Tue, 20 Jul 2021 02:28:00 +0000</pubDate><guid>https://rgoswami.me/posts/emacs-lang-servers/</guid><description>doom-emacs as an ssh IDE with TRAMP using eglot and language servers.
Background For most of my emacs configuration1, there normally isn&amp;rsquo;t very much to write about which isn&amp;rsquo;t immediately evident from my configuration site. However, since my shift to a MacBook, I have needed to fine tune my existing lsp-mode default setup for TRAMP and this post will cover a little bit of that. Though most of the post is about doom-emacs, it is also applicable to vanilla emacs after porting the snippets over to use-package instead.</description></item><item><title>Talk Supplements for SERI'21</title><link>https://rgoswami.me/posts/seri-2021-meta/</link><pubDate>Sun, 18 Jul 2021 21:44:00 +0000</pubDate><guid>https://rgoswami.me/posts/seri-2021-meta/</guid><description>A meta-post on a talk I was to give at SERI'21
Background Much the same as the rationale behind my other presentation meta-posts, that is:
I would like to preserve questions I would like to collect the video, slides and other miscellaneous stuff in one location 1 It would be nice to have my own thoughts here afterwards Details SERI or the Software Engineering Research in India meeting is the only informal event dedicated to software engineering in the subcontinent, so it was rather gratifying to be accepted, and, to present on Modern documentation across languages.</description></item><item><title>GSoC21 W6: LFortran ASR and Values</title><link>https://rgoswami.me/posts/gsoc21-w6/</link><pubDate>Fri, 16 Jul 2021 17:19:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w6/</guid><description>Enriching ASR nodes at compile time
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Series This post is part of a series based around my weekly GSoC21 project check-ins.
GSoC21 W1: LFortran Kickoff
GSoC21 W2: LFortran Unraveling
GSoC21 W3: Kind, Characters, and Standards
GSoC21 W4: LFortran, Backends and Bugs
GSoC21 W5: LFortran Design Details and minidftatom</description></item><item><title>GSoC21 W5: LFortran Design Details and minidftatom</title><link>https://rgoswami.me/posts/gsoc21-w5/</link><pubDate>Fri, 09 Jul 2021 19:23:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w5/</guid><description>Project scaffolding and compiler design
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Series This post is part of a series based around my weekly GSoC21 project check-ins.
GSoC21 W1: LFortran Kickoff
GSoC21 W2: LFortran Unraveling
GSoC21 W3: Kind, Characters, and Standards
GSoC21 W4: LFortran, Backends and Bugs
GSoC21 W5: LFortran Design Details and minidftatom &amp;lt;&amp;ndash; You are here!</description></item><item><title>GSoC21 W4: LFortran, Backends and Bugs</title><link>https://rgoswami.me/posts/gsoc21-w4/</link><pubDate>Fri, 02 Jul 2021 23:26:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w4/</guid><description>Towards the mid-summer evaluation and redirecting efforts
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Series This post is part of a series based around my weekly GSoC21 project check-ins.
GSoC21 W1: LFortran Kickoff
GSoC21 W2: LFortran Unraveling
GSoC21 W3: Kind, Characters, and Standards
GSoC21 W4: LFortran, Backends and Bugs &amp;lt;&amp;ndash; You are here!</description></item><item><title>Talk Supplements for IOP CAPS'21 Webdev Workshop</title><link>https://rgoswami.me/posts/iop-caps-webdev-2021-meta/</link><pubDate>Sat, 26 Jun 2021 10:05:00 +0000</pubDate><guid>https://rgoswami.me/posts/iop-caps-webdev-2021-meta/</guid><description>A meta-post on the workshop I held for the IOP CAPS'21 student conference on Web Development for Physicists
Background Much the same as the rationale behind my other presentation meta-posts, that is:
I would like to preserve questions I would like to collect the video, slides and other miscellaneous stuff in one location 1 It would be nice to have my own thoughts here afterwards Details Workshop listing on conference site Blurb:</description></item><item><title>GSoC21 W3: Kind, Characters, and Standards</title><link>https://rgoswami.me/posts/gsoc21-w3/</link><pubDate>Sat, 26 Jun 2021 00:28:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w3/</guid><description>Standard practice pragmatic approaches to kind for dftatom
Background Serialized update for the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Series This post is part of a series based around my weekly GSoC21 project check-ins.
GSoC21 W1: LFortran Kickoff
GSoC21 W2: LFortran Unraveling
GSoC21 W3: Kind, Characters, and Standards &amp;lt;&amp;ndash; You are here!
GSoC21 W4: LFortran, Backends and Bugs</description></item><item><title>GSoC21 W2: LFortran Unraveling</title><link>https://rgoswami.me/posts/gsoc21-w2/</link><pubDate>Fri, 18 Jun 2021 18:59:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w2/</guid><description>Delving into language standards and back-ends for lfortran
Background As discussed in a previous post in this series, I have been spending roughly half of each working day with LFortran as part of the 2021 Google Summer of Code under the fortran-lang organization, mentored by Ondrej Certik.
Series This post is part of a series based around my weekly GSoC21 project check-ins.
GSoC21 W1: LFortran Kickoff</description></item><item><title>GSoC21 W1: LFortran Kickoff</title><link>https://rgoswami.me/posts/gsoc21-w1/</link><pubDate>Sat, 12 Jun 2021 00:57:00 +0000</pubDate><guid>https://rgoswami.me/posts/gsoc21-w1/</guid><description>Charting paths towards concrete lfortran usage
Background As mentioned in an earlier post, I have had the immense pleasure of continuing development of the disruptive lfortran compiler under the aegis of the Fortran Lang organization, financed by the Google Summer of Code and mentored ably by Ondrej Certik. A rather interesting consequence of this is that we are strongly encouraged to write a precis of our activities each week.</description></item><item><title>Talk Supplements for Code In Place 2021 SL Workshop</title><link>https://rgoswami.me/posts/cip-2021-slw-meta/</link><pubDate>Sat, 29 May 2021 07:07:00 +0000</pubDate><guid>https://rgoswami.me/posts/cip-2021-slw-meta/</guid><description>A meta-post on the workshop I held for the Section Leaders of Code in Place 2021 entitled &amp;ldquo;Wrangling Pythons with Nix for Reproducible Purity&amp;rdquo;
Background Much the same as the rationale behind my other presentation meta-posts, that is:
I would like to preserve questions I would like to collect the video, slides and other miscellaneous stuff in one location 1 It would be nice to have my own thoughts here afterwards Details Blurb verbatim from the spreadsheet.</description></item><item><title>Biblatex to Bibtex for Sphinx</title><link>https://rgoswami.me/posts/zotero-biblatex-bibtex/</link><pubDate>Sun, 23 May 2021 05:37:00 +0000</pubDate><guid>https://rgoswami.me/posts/zotero-biblatex-bibtex/</guid><description>Background Transitioning from biblatex to bibtex with biber for sphinx
I recently started a set of notes using jupyter-book. However, in the process I ran into a horrific bibliography related SNAFU. sphinx in its infinite wisdom only accepts a rather odd subset of bibtex.
I have been happily exporting my giant bibliography with Zotero (and better bibtex) exporting my references as biblatex while sphinx started choking dreadfully. This post describes attempts to reconcile the biblatex sources without manual intervention.</description></item><item><title>Fortran, GSoC21 and Me</title><link>https://rgoswami.me/posts/fortran-gsoc-me/</link><pubDate>Fri, 21 May 2021 05:17:00 +0000</pubDate><guid>https://rgoswami.me/posts/fortran-gsoc-me/</guid><description>Reminisces and prophecies brought upon by LFortran and GSoC 2021
Background I know not what the language of the future will look like, but I know it will be called FORTRAN&amp;hellip; &amp;mdash; Charles Anthony Richard Hoare, circa 1982 &amp;ndash; Daan Frenkel, 2020
This post is a little belated, given that the GSoC announcements were a few days ago. Therein lies the future, and much digital ink, sweat and blood shall be spilled towards accomplishing the goals outlined in my accepted project proposal.</description></item><item><title>Wrapping Up Code in Place 2021</title><link>https://rgoswami.me/posts/cip2021-fin/</link><pubDate>Fri, 21 May 2021 02:29:00 +0000</pubDate><guid>https://rgoswami.me/posts/cip2021-fin/</guid><description>Short recollections of the second iteration of CIP; the course with the largest teaching (and voluntary) staff bringing the joy of programming to thousands
Background Last year in 2020, as a section leader for the Stanford Code in Place initiative (which generated a series of posts), I was able to hone my teaching skills and bask in the reflected glory of many talented students who were in my Code in Place section.</description></item><item><title>Forwarding Multiple Local Ports</title><link>https://rgoswami.me/snippets/forward-multiport/</link><pubDate>Sun, 16 May 2021 03:47:00 +0000</pubDate><guid>https://rgoswami.me/snippets/forward-multiport/</guid><description>Most often it makes more sense to map the same ports on every intermediate machine.
Host super Hostname super.machine.location.is IdentityFile ~/.ssh/mykey User myuser LocalForward 8001 localhost:8001 LocalForward 8002 localhost:8002 LocalForward 8003 localhost:8003 LocalForward 8004 localhost:8004 This is good for interactive sessions with multiple servers. For single servers, reverse proxy tunnels are more efficient.</description></item><item><title>Overwriting Attributes</title><link>https://rgoswami.me/snippets/nix-collection-overwrite-attrs/</link><pubDate>Sun, 16 May 2021 03:47:00 +0000</pubDate><guid>https://rgoswami.me/snippets/nix-collection-overwrite-attrs/</guid><description>doxygen191 = pkgs.doxygen.overrideAttrs (_: rec { name = &amp;#34;doxygen-1.9.1&amp;#34;; src = pkgs.fetchurl { urls = [ &amp;#34;mirror://sourceforge/doxygen/${name}.src.tar.gz&amp;#34; # faster, with https, etc. &amp;#34;http://doxygen.nl/files/${name}.src.tar.gz&amp;#34; ]; sha256 = &amp;#34;1lcif1qi20gf04qyjrx7x367669g17vz2ilgi4cmamp1whdsxbk7&amp;#34;; }; });</description></item><item><title>Dotfiles from dotgit to bombadil</title><link>https://rgoswami.me/posts/dotfiles-dotgit-bombadil/</link><pubDate>Sun, 02 May 2021 23:12:00 +0000</pubDate><guid>https://rgoswami.me/posts/dotfiles-dotgit-bombadil/</guid><description>Discussion on dotfile management, a meandering path to my current setup from dotgit to bombadil. EDIT: Superseded by my chezmoi configuration described here
Background No one gets very far working with stock one-size fits all tools in any discipline but it is especially true of working with computers. The right set of dotfiles have been compared to priming spells for invocation later, and this is probably true. More than anything else, dotfiles offer familiarity where there is none, be it from cowsay or a fancy shell prompt 1.</description></item><item><title>Talk Supplements for IOP's C++ Workshop</title><link>https://rgoswami.me/posts/iop-cpp-2021-meta/</link><pubDate>Wed, 14 Apr 2021 01:17:00 +0000</pubDate><guid>https://rgoswami.me/posts/iop-cpp-2021-meta/</guid><description>A meta-post on the workshop I held for the IOP student community on Intermediate C++
Background Much the same as the rationale behind my other presentation meta-posts, that is:
I would like to preserve questions I would like to collect the video, slides and other miscellaneous stuff in one location 1 It would be nice to have my own thoughts here afterwards Details Blurb verbatim from the workshop announcement.</description></item><item><title>Free Software and Me</title><link>https://rgoswami.me/posts/fsf-me-stallman/</link><pubDate>Sat, 27 Mar 2021 21:28:00 +0000</pubDate><guid>https://rgoswami.me/posts/fsf-me-stallman/</guid><description>Thoughts about the FSF, toxicity, and Stallman
First a disclaimer. Comments are not enabled for this post. This is very personal, and it is in my online space so I reserve the right to not talk about this. This is not a conversation. It is a protracted comment on recent, disappointing, news about the &amp;ldquo;tech community&amp;rdquo;. It is unlike anything I have normally published; and is hopefully the last time I will publish something like this.</description></item><item><title>SymEngine and the Season of Docs</title><link>https://rgoswami.me/posts/symengine-gsod20/</link><pubDate>Thu, 25 Mar 2021 21:18:00 +0000</pubDate><guid>https://rgoswami.me/posts/symengine-gsod20/</guid><description>An overview of documentation complexity and an analysis of incentives.
Background As mentioned a few times before, last year a proposal of mine to improve the documentation for the SymEngine organization was accepted under the Google Season of Docs 2020 initiative. This is a more personal and expanded discussion on the report submitted on the SymEngine Wiki regarding the goals and completion metrics.
Figure 1: Promotional image Google seemed to strongly suggest</description></item><item><title>My Life in E-ink</title><link>https://rgoswami.me/posts/my-life-in-eink/</link><pubDate>Sat, 20 Feb 2021 01:41:00 +0000</pubDate><guid>https://rgoswami.me/posts/my-life-in-eink/</guid><description>Collection of odds and ends relating to e-readers including personal reminisces
Background Reading has been a huge part of my life. The written word has had arguably more of an impact on my life than anything I have experienced in person. As a kid back in early 2000&amp;rsquo;s; this meant a lot of library trips and saving for paperbacks. I also caught the first wave of the e-ink revolution.</description></item><item><title>Reclaiming Email with Astroid</title><link>https://rgoswami.me/posts/reclaim-email-astroid/</link><pubDate>Wed, 30 Dec 2020 06:37:00 +0000</pubDate><guid>https://rgoswami.me/posts/reclaim-email-astroid/</guid><description>Migrating Imap, Gmail and Exchange, mail accounts from GUI clients to Astroid
Background Initially, I had planned this post to start with a brief history of the decline of email clients for Linux. That quickly got out of hand, and was therefore spun out into a post of its own (TBD). To keep things brief. Thanks to the incredible ineptitude of the Thunderbird steering committee, I ended up requiring a new mail client.</description></item><item><title>Private Github Actions without PAT</title><link>https://rgoswami.me/posts/priv-gh-actions/</link><pubDate>Wed, 23 Dec 2020 14:34:00 +0000</pubDate><guid>https://rgoswami.me/posts/priv-gh-actions/</guid><description>A workflow for managing private submodules in a private repository without personal access tokens for Github actions
Background Ever since Travis CI decided to drink corporate kool-aid, the search for a new CI has been brought to the fore again. Github Actions seem uniquely suited for private repositories, since most CIs bill for private repos. However, the basic authentication setup for the checkout action involves using one SSH key, effectively a personal access token, for both the main project and all submodules.</description></item><item><title>Project Specific Expressions from Nixpkgs for Sphinx documentation</title><link>https://rgoswami.me/posts/nix-prj-spec-doc/</link><pubDate>Tue, 22 Dec 2020 05:09:00 +0000</pubDate><guid>https://rgoswami.me/posts/nix-prj-spec-doc/</guid><description>Short post on making minimal changes to derivations in nixpkgs at a project level using callPackage() along with GH-Actions for deployment of sphinx documentation.
Background As part of my work on the Symengine documentation1, I had originally thought of leveraging nix for reproducible builds for each of the language bindings with GH-Actions. There exists a derivation in the upstream package repository, but it was outdated (v6.0.0 instead of v6.</description></item><item><title>Remapping Keys with XKB and KLFC</title><link>https://rgoswami.me/posts/remap-keys-xkb-klfc/</link><pubDate>Sat, 05 Dec 2020 22:05:00 +0000</pubDate><guid>https://rgoswami.me/posts/remap-keys-xkb-klfc/</guid><description>An introduction to hacking keyboard layouts with X keyboard extension (XKB) and klfc, focused on Colemak and vim bindings
Background Inspite of maximizing ergonomic bindings for most common software (e.g. Vimium, doom-emacs), every operation with the arrow keys still trouble me. Here I will lay out my experiments transitioning to a stable, uniquely defined setup with the X keyboard extension.
Series This post is part of a series on Colemak and keyboard management in general.</description></item><item><title>Anki Decks with Orgmode</title><link>https://rgoswami.me/posts/anki-decks-orgmode/</link><pubDate>Tue, 27 Oct 2020 01:05:00 +0000</pubDate><guid>https://rgoswami.me/posts/anki-decks-orgmode/</guid><description>Setting up unicode math and orgmode for painless Anki deck building
Background A recent Hacker News post reminded me of Anki, and that brought back memories of my Anki orgmode setup. I thought I&amp;rsquo;d re-create and immortalize it.
The standard way of working with Anki, is with a pretty awkward GUI. There are changes to be made here, which make life a little easier, including the setup of custom cards, but the inherent concerns of the WYSIWYG editor are basically insurmountable.</description></item><item><title>Old Laptops as Secondary Monitors</title><link>https://rgoswami.me/posts/laptop-as-second-screens/</link><pubDate>Fri, 23 Oct 2020 23:22:00 +0000</pubDate><guid>https://rgoswami.me/posts/laptop-as-second-screens/</guid><description>Dual screen workflows without screens across operating systems
Background My X380 sadly has been having port issues. This meant that my M14 was no longer a viable option for my second screen needs.
Outline The general form of the solution works in one of two ways:
VNC Viewer Where the (second-screen) laptop connects to a VNC server on the primary laptop Peripheral Shares Where the secondary laptop runs a server to enable proxying mouse and keyboard access from the primary laptop VNC and Windows For laptops running Windows, I personally just set up TightVNC.</description></item><item><title>Talk Supplements for NixCon 2020</title><link>https://rgoswami.me/posts/nixcon-in-2020-meta/</link><pubDate>Sat, 17 Oct 2020 10:40:00 +0000</pubDate><guid>https://rgoswami.me/posts/nixcon-in-2020-meta/</guid><description>A meta-post on my lightning talk at NixCon 2020
Background Much the same as the rationale behind my meta-post on my talk at PyCon India 2020, that is:
I would like to preserve questions I would like to collect the video, slides and other miscellaneous stuff in one location 1 It would be nice to have my own thoughts here afterwards Details Title Nix from the dark ages (without Root) Proposal See the cfp response here Abstract Short comments from the trenches of High Performance Clusters on working with Nix on kernel locked-in systems without proot support.</description></item><item><title>Replacing Zoom with Open Broadcaster Software</title><link>https://rgoswami.me/posts/rep-zoom-obs/</link><pubDate>Sat, 03 Oct 2020 17:05:00 +0000</pubDate><guid>https://rgoswami.me/posts/rep-zoom-obs/</guid><description>A post on local recordings
Background Since the advent of the COVID-19 situation, there has been an increase in the demand for recorded materials. Standard approaches involve Zoom, which is not only proprietary, but also quite a bit of a privacy nightmare. The last straw was the random placement of my speaker bauble head.
Figure 1: Zoom webcam placement
At this point, given that I was to set up a pre-recorded video for PyCon India 2020, I decided to look into alternatives.</description></item><item><title>Talk Supplements for PyCon India 2020</title><link>https://rgoswami.me/posts/pycon-in-2020-meta/</link><pubDate>Fri, 02 Oct 2020 23:56:00 +0000</pubDate><guid>https://rgoswami.me/posts/pycon-in-2020-meta/</guid><description>A meta-post on my talk at PyCon India 2020
Background I am to present at PyCon IN 2020. Some of the motivating reasons for having a post are:
I would like to preserve questions I would like to collect the video, slides and other miscellaneous stuff in one location 1 It would be nice to have my own thoughts here afterwards Details of this happy circumstance are reproduced below from the CFP here.</description></item><item><title>Publishing Doxygen and Sphinx with Nix and Rake</title><link>https://rgoswami.me/posts/pub-doc-cpp-dox-sph-nix/</link><pubDate>Tue, 22 Sep 2020 10:30:00 +0000</pubDate><guid>https://rgoswami.me/posts/pub-doc-cpp-dox-sph-nix/</guid><description>Automating documenation deployment with Travis, rake and nix
Background In the previous post we generated documentation using Doxygen with Exhale to handle Sphinx. Now we will clean up the earlier workflow with rake and ensure the environment is reproducible with nix while deploying to Travis CI.
Series Documenting C++ with Doxygen and Sphinx - Exhale Publishing Doxygen and Sphinx with Nix and Rake &amp;lt;&amp;ndash; You are here Documenting C++ with Doxygen and Sphinx - doxyrest Adding Tutorials to Sphinx Projects Setup A quick reminder of the setup we generated in the last post:</description></item><item><title>Documenting C++ with Doxygen and Sphinx - Exhale</title><link>https://rgoswami.me/posts/doc-cpp-dox-sph-exhale/</link><pubDate>Tue, 22 Sep 2020 06:58:00 +0000</pubDate><guid>https://rgoswami.me/posts/doc-cpp-dox-sph-exhale/</guid><description>This post outlines a basic workflow for C++ projects using Doxygen, Sphinx, and Exhale.
Background My project proposal for documenting Symengine was recently accepted for the Google Summer of Docs initiative. In the past I have been more than happy to document C++ code using only Doxygen (with pretty fantastic results), while keeping example usage separate (d-SEAMS wiki). Though this is still a feasible method, a monolithic multi-project setup might benefit from Sphinx, which is what will be covered.</description></item><item><title>Local Nix without Root</title><link>https://rgoswami.me/posts/local-nix-no-root/</link><pubDate>Mon, 07 Sep 2020 18:30:00 +0000</pubDate><guid>https://rgoswami.me/posts/local-nix-no-root/</guid><description>Monkeying around with nix for HPC systems which have no root access and NFS filesystems.
Background Nix is not well known for being friendly to users without root access. This is typically made worse by the &amp;ldquo;exotic&amp;rdquo; filesystem attributes common to HPC networks (this also plagues hermes). An earlier post details how and why proot failed. The short pitch is simply:
Figure 1: Does your HPC look like this?</description></item><item><title>Niv and Mach-Nix for Nix Python</title><link>https://rgoswami.me/posts/mach-nix-niv-python/</link><pubDate>Wed, 26 Aug 2020 05:42:00 +0000</pubDate><guid>https://rgoswami.me/posts/mach-nix-niv-python/</guid><description>Short post on using mach-nix with niv.
Background In previous posts, there was a discussion on a ground up approach to adding packages which aren&amp;rsquo;t on the core nixpkgs channels using GitHub or PyPi sources. However, this lacked a way to do so programmatically, and also a way to convert existing python projects.
Python Dependency Management This time, instead of the more pedagogical approach of building packages from PyPi or GitHub, we will use overlays and the excellent mach-nix to speed up the process.</description></item><item><title>Nix Shells for Node Projects</title><link>https://rgoswami.me/posts/nix-shell-node/</link><pubDate>Sun, 23 Aug 2020 10:09:00 +0000</pubDate><guid>https://rgoswami.me/posts/nix-shell-node/</guid><description>Background As a prelude to writing up the details of how this site is generated, I realized I should write up a nix oriented workflow for node packages.
Tooling and Idea The basic concepts are:
Use npm to generate a package-lock.json file Use node2nix in a shell to generate a set of nix derivations Enter a shell environment with the nix inputs Profit However, the nuances of this are a bit annoying at first.</description></item><item><title>A Tutorial Introduction to Nix</title><link>https://rgoswami.me/posts/ccon-tut-nix/</link><pubDate>Tue, 18 Aug 2020 16:18:00 +0000</pubDate><guid>https://rgoswami.me/posts/ccon-tut-nix/</guid><description>Brief introduction to a nix based project workflow.
Background For CarpentryCon@Home 2020, along with Amrita Goswami, I am to prepare and deliver a workshop on &amp;ldquo;Reproducible Environments with the Nix Packaging System.&amp;rdquo; In particular, as a community of practice lesson, the focus is not on packaging (as is typical of most Nix tutorials) nor on the Nix expression language itself, but instead on the use of Nix as a replacement for virtual environments using mkShell.</description></item><item><title>HPC Dotfiles and LMod</title><link>https://rgoswami.me/posts/hpc-dots-lmod/</link><pubDate>Sun, 09 Aug 2020 02:29:00 +0000</pubDate><guid>https://rgoswami.me/posts/hpc-dots-lmod/</guid><description>Background My move away from the powerful, but unimaginatively named HPC clusters of IITK 1 brought me in close contact with the Lua based 2 lmod module system. Rather than fall into the rabbit hole of brew we will leverage the existing system to add our new libraries. Not finding any good collections of these composable environments, and having failed once before to install Nix as a user without admin access, I decided to start my own collection of Lmod recipies.</description></item><item><title>Explorations with Backlight Controllers</title><link>https://rgoswami.me/posts/expl-backlight-control/</link><pubDate>Sat, 01 Aug 2020 20:00:00 +0000</pubDate><guid>https://rgoswami.me/posts/expl-backlight-control/</guid><description>A short post detailing the many trials and tribulations of setting brightness on multiple monitors in tandem.
Background As regular readers might know, I have a multi-screen setup, which accounts for having touch enabled on my primary laptop screen (detailed here). A failing of this setup was that I was not able to control the brightness of both monitors at the same time.
Existing Stack Since I use i3, my brightness control is simply done with bindsym lines as follows1:</description></item><item><title>A Short Guide to Statistical Rethinking²</title><link>https://rgoswami.me/posts/some-sol-sr2/</link><pubDate>Fri, 24 Jul 2020 17:35:00 +0000</pubDate><guid>https://rgoswami.me/posts/some-sol-sr2/</guid><description>A meta post introducing my solutions to the fantastic excellent second edition of &amp;ldquo;Statistical Rethinking&amp;rdquo; by Richard McElreath, a.k.a. Statistical Rethinking². Also discusses strategies to keep up with the material, mostly meant for self-study groups.
Background As detailed previously, I recently was part of a course centered around Bayesian modeling for the Icelandic COVID-19 pandemic. The Bayesian mindset needs no introduction, and this post is completely inadequete to explain why anyone should be interested (that&amp;rsquo;s what the book is for!</description></item><item><title>Grant Proposals - I</title><link>https://rgoswami.me/posts/grant-proposals/</link><pubDate>Sat, 18 Jul 2020 20:31:00 +0000</pubDate><guid>https://rgoswami.me/posts/grant-proposals/</guid><description>Personal recollections of the academic grant writing process.
Background Of the many types of writing one undertakes in a typical academic career, grant writing stands out as a rather large anomaly. For the purposes of this post, we will note that an academic writing taxonomy would consist of roughly:
Coursework and Assignments These are more or less comparative writing exercises, where the only main thing which is enforced is (or should be) plagiarism checks.</description></item><item><title>Multiple Monitors with Touchscreens</title><link>https://rgoswami.me/posts/multi-monitor-touch/</link><pubDate>Sat, 11 Jul 2020 22:45:00 +0000</pubDate><guid>https://rgoswami.me/posts/multi-monitor-touch/</guid><description>A short tutorial post on multiple screens for laptops with touch-support and ArchLinux. Also evolved into a long rant, with an Easter egg.
Background Of late, I have been attempting to move away from paper, for environmental reasons1. Years of touch typing in Colemak (rationale, config changes) and a very customized Emacs setup (including mathematica, temporary latex templates, Nix, and org-roam annotations) have more or less kept me away from analog devices.</description></item><item><title>Analytics II: Goat to Clicky</title><link>https://rgoswami.me/posts/goat-clicky/</link><pubDate>Mon, 06 Jul 2020 23:09:00 +0000</pubDate><guid>https://rgoswami.me/posts/goat-clicky/</guid><description>A follow up to my earlier post on analytics, and on migrating from Goat Counter to Clicky.
Background A few days ago I recieved the following email:
Hi there!
I made some changes to the GoatCounter plans/pricing:
GoatCounter now has a &amp;ldquo;Starter&amp;rdquo; plan, this is €5/month, limited to 100k pageviews/month, comes with a custom domain, and allow commercial use. This is mostly the same as the &amp;ldquo;personal plus&amp;rdquo; plan there was before, except that it allows commercial use.</description></item><item><title>LineageOS Maintainer Appreciation</title><link>https://rgoswami.me/posts/linos-maintainer-appre/</link><pubDate>Sun, 28 Jun 2020 18:35:00 +0000</pubDate><guid>https://rgoswami.me/posts/linos-maintainer-appre/</guid><description>A post on a surprisingly heartwarming community appreciation effort.
Background As probably anyone who has asked me about my programming experience has heard, my first real foray into the FOSS community was being a LineageOS co-maintainer (as HaoZeke) for the Xperia Z5 Dual. I haven&amp;rsquo;t thought about the community all that much for a few years, mostly since XDA became pretty toxic, and Android development just got, less exciting.</description></item><item><title>SR2 :: Solutions for Chapters {13,14}</title><link>https://rgoswami.me/posts/sr2-ch13-ch14/</link><pubDate>Sun, 28 Jun 2020 00:00:00 +0000</pubDate><guid>https://rgoswami.me/posts/sr2-ch13-ch14/</guid><description>Setup details are described here, and the meta-post about these solutions is here.
Materials The summmer course1 is based off of the second edition of Statistical Rethinking by Richard McElreath.
Chapter 13 E{1,2,3,4,5} Chapter 14 E{1,2,3} Packages A colophon with details is provided at the end, but the following packages and theme parameters are used throughout.
libsUsed&amp;lt;-c(&amp;#34;tidyverse&amp;#34;,&amp;#34;tidybayes&amp;#34;,&amp;#34;orgutils&amp;#34;,&amp;#34;dagitty&amp;#34;, &amp;#34;rethinking&amp;#34;,&amp;#34;tidybayes.rethinking&amp;#34;, &amp;#34;ggplot2&amp;#34;,&amp;#34;kableExtra&amp;#34;,&amp;#34;dplyr&amp;#34;,&amp;#34;glue&amp;#34;, &amp;#34;latex2exp&amp;#34;,&amp;#34;data.table&amp;#34;,&amp;#34;printr&amp;#34;,&amp;#34;devtools&amp;#34;) invisible(lapply(libsUsed, library, character.</description></item><item><title>SR2 :: Solutions for Chapters {9,11,12}</title><link>https://rgoswami.me/posts/sr2-ch9-ch11-ch12/</link><pubDate>Sun, 21 Jun 2020 00:00:00 +0000</pubDate><guid>https://rgoswami.me/posts/sr2-ch9-ch11-ch12/</guid><description>Setup details are described here, and the meta-post about these solutions is here.
Materials The summmer course1 is based off of the second edition of Statistical Rethinking by Richard McElreath. This submission covers the following exercise questions:
Chapter 9 E{3,4,5,6} M{1,2,3} Chapter 11 E{1,2,3,4} M{2,3,4,5,6,8} Chapter 12 E{4} H{1,2} Packages A colophon with details is provided at the end, but the following packages and theme parameters are used throughout.</description></item><item><title>Temporary LaTeX Documents with Orgmode</title><link>https://rgoswami.me/posts/org-arb-tex/</link><pubDate>Fri, 19 Jun 2020 05:07:00 +0000</pubDate><guid>https://rgoswami.me/posts/org-arb-tex/</guid><description>A post on working with transient TeX templates in orgmode without modifying global configurations. This will also serve as a rudimentary introduction to TeX in orgmode.
Background The sad reality of working in a field dominated by institutional actors which do not care for recognizing software development as a skill is that there are often a lot of ugly LaTeX templates1. In particular, often Universities have arbitrary LaTeX templates from the the dark days of 2010 something, which include gratuitous usage of say, natbib instead of biblatex.</description></item><item><title>SR2 :: Solutions for Chapters {5,6,7}</title><link>https://rgoswami.me/posts/sr2-ch5-ch6-ch7/</link><pubDate>Sun, 14 Jun 2020 00:00:00 +0000</pubDate><guid>https://rgoswami.me/posts/sr2-ch5-ch6-ch7/</guid><description>Setup details are described here, and the meta-post about these solutions is here.
Materials The summmer course1 is based off of the second edition of Statistical Rethinking by Richard McElreath. This post covers the following exercise questions:
Chapter 5 E{1,2,3,4} M{1,2,3,5} Chapter 6 E{1,2,3,4} M{1,2,3} Chapter 7 E{1,2,3,4} M{1,2,3,4,5,6} Packages A colophon with details is provided at the end, but the following packages and theme parameters are used throughout.</description></item><item><title>Emacs for Nix-R</title><link>https://rgoswami.me/posts/emacs-nix-r/</link><pubDate>Wed, 10 Jun 2020 00:12:00 +0000</pubDate><guid>https://rgoswami.me/posts/emacs-nix-r/</guid><description>A short post on my current set-up for R with nixpkgs and emacs to auto-compile my system configuration.
Background This is my third post on working with nixpkgs and R.
Part I covered ways of working effectively with R and nixpkgs Part II dealt with composing dependent devtools packages in a per-package environment, with a focus on rethinking and tidybayes.rethinking This final part is about automating the system-wide configuration using emacs.</description></item><item><title>Statistical Rethinking and Nix</title><link>https://rgoswami.me/posts/rethinking-r-nix/</link><pubDate>Sun, 07 Jun 2020 04:24:00 +0000</pubDate><guid>https://rgoswami.me/posts/rethinking-r-nix/</guid><description>This post describes how to set up a transparent automated setup for reproducible R workflows using nixpkgs, niv, and lorri. The explanatory example used throughout the post is one of setting up the rethinking package and running some examples from the excellent second edition of &amp;ldquo;Statistical Rethinking&amp;rdquo; by Richard McElreath.
Background As detailed in an earlier post1, I had set up Nix to work with non-CRAN packages. If the rest of this section is unclear, please refer back to the earlier post.</description></item><item><title>SR2 :: Solutions for Chapters {2,3,4}</title><link>https://rgoswami.me/posts/sr2-ch2-ch3-ch4/</link><pubDate>Sun, 07 Jun 2020 00:00:00 +0000</pubDate><guid>https://rgoswami.me/posts/sr2-ch2-ch3-ch4/</guid><description>Setup details are described here, and the meta-post about these solutions is here.
Materials The summmer course1 is based off of the second edition of Statistical Rethinking by Richard McElreath. This post covers the following exercise questions:
Chapter 2 Easy {1,2,3,4} Medium {1,2,4} Chapter 3 Easy {1,2,3,4,5} Medium {1,2,3,4,6} Chapter 4 Easy {1,2,3,4,5} Medium {1,2,3,4,5,6,7} Packages libsUsed&amp;lt;-c(&amp;#34;tidyverse&amp;#34;,&amp;#34;tidybayes&amp;#34;,&amp;#34;orgutils&amp;#34;, &amp;#34;rethinking&amp;#34;,&amp;#34;tidybayes.</description></item><item><title>Nix with R and devtools</title><link>https://rgoswami.me/posts/nix-r-devtools/</link><pubDate>Sat, 06 Jun 2020 05:49:00 +0000</pubDate><guid>https://rgoswami.me/posts/nix-r-devtools/</guid><description>This post discusses briefly, the nix-shell environment for reproducible programming. In particular, there is an emphasis on extensions for installing and working with packages not in CRAN, i.e. packages off Github which are normally installed with devtools.
Background The entire nix ecosystem is fantastic, and is the main packaging system used by d-SEAMS as well. Recently I began working through the excellent second edition of &amp;ldquo;Statistical Rethinking&amp;rdquo; by Richard McElreath1.</description></item><item><title>LosslessCut, Zoom and an AMA for CS106A</title><link>https://rgoswami.me/posts/losslesscut-zoom-ama/</link><pubDate>Wed, 20 May 2020 20:21:00 +0000</pubDate><guid>https://rgoswami.me/posts/losslesscut-zoom-ama/</guid><description>Background I recently had the opportunity to take part in an AMA (ask me anything) session for the CS106A students on Machine Learning for the Physical Sciences. This is a post about the technical issues, and also includes a video if you read through.
Zoom and LosslessCut Zoom recordings are one of the nicer ways to deal with switching windows and screen sharing, especially after fixing the dark screen glitch. However, though LosslessCut works really well to get cut-points, exporting and merging the file into one caused a bunch of glitches.</description></item><item><title>Compton to Picom and Zoom Glitches</title><link>https://rgoswami.me/posts/compton-zoom-shadow/</link><pubDate>Tue, 12 May 2020 01:32:00 +0000</pubDate><guid>https://rgoswami.me/posts/compton-zoom-shadow/</guid><description>Background I have been leading the fantastic section 881 as a virtual section leader for the Stanford CS106A: Code in Place initiative for the past four weeks. I have also spent a lot of time on Zoom, sharing my screen. Fun fact. My screen shares look like this:
Figure 1: Zoom screen share with weird overlay
This post is about hunting down what caused this amazing zoom glitch1 and how I finally fixed it.</description></item><item><title>An Orgmode Note Workflow</title><link>https://rgoswami.me/posts/org-note-workflow/</link><pubDate>Sun, 10 May 2020 15:01:00 +0000</pubDate><guid>https://rgoswami.me/posts/org-note-workflow/</guid><description>Background One of the main reasons to use orgmode is definitely to get a better note taking workflow. Closely related to blogging or writing, the ideal note workflow is one which lets you keep a bunch of throwaway ideas and also somehow have access to them in a coherent manner. This will be a long post, and it is a work-in-progress, so, keep that in mind. Since this is mainly me1 work-shopping my technique, the philosophy will come in a later post probably.</description></item><item><title>Refactoring Dotfiles For Colemak</title><link>https://rgoswami.me/posts/colemak-dots-refactor/</link><pubDate>Sat, 02 May 2020 20:30:00 +0000</pubDate><guid>https://rgoswami.me/posts/colemak-dots-refactor/</guid><description>A more actionable follow up to my personal recollections relating to my switch to Colemak.
Background I have, in the past written about how I made the switch to Colemak. However, until recently, I was still trying to mimic the VIM keybindings from QWERTY. This is a post where I discuss the changes I made to ensure that I never have to stretch my fingers in odd ways again.</description></item><item><title>Pandoc to Orgmode with Babel</title><link>https://rgoswami.me/posts/org-pandoc-babel/</link><pubDate>Sat, 02 May 2020 16:39:00 +0000</pubDate><guid>https://rgoswami.me/posts/org-pandoc-babel/</guid><description>Background One of the best things about writing in orgmode is that we can embed and execute arbitrary code snippets. However, not all languages have an exporter, for obvious reasons. Somewhat surprisingly, there is no way to call pandoc on embedded snippets, which feels like a waste, especially when a whole bunch of documentation formats can be converted to orgmode with it.
Consider the following beautifully highlighted snippet of an rst (ReStructured Text) list table.</description></item><item><title>Using Mathematica with Orgmode</title><link>https://rgoswami.me/posts/org-mathematica/</link><pubDate>Sun, 26 Apr 2020 20:01:00 +0000</pubDate><guid>https://rgoswami.me/posts/org-mathematica/</guid><description>Background I have been wanting to find a workflow which allows me to bypass writing a lot of TeX by hand for a while now. To that end I looked into using a computer algebra system (CAS). Naturally, my first choice was the FOSS Maxima (also because it uses Lisp under the hood). However, for all the reasons listed here, relating to its accuracy, which have not been fixed even though the post was over 5 years ago, I ended up having to go with the closed source Mathematica.</description></item><item><title>CS106A Small Group Training</title><link>https://rgoswami.me/posts/scp-smallgrp-trainig/</link><pubDate>Wed, 22 Apr 2020 07:01:00 +0000</pubDate><guid>https://rgoswami.me/posts/scp-smallgrp-trainig/</guid><description>Background As I mentioned earlier, I&amp;rsquo;m leading a section for Stanford CS106A: Code in Place. This post relates to the notes and thoughts garnered during the small group training session1.
Reflections Demographics Redacted. Did not use breakout meetings due to privacy issues.
Engagement and Participation Some people were more active (skewed responses) Some of the more rudimentary questions might have been suppressed Highlighted Moments Covering multiple perspectives Different mental models Challenges and Transformations Technical debt was an issue Lack of engagement Went on for too long For me in particular:</description></item><item><title>CS106A Section Meeting I</title><link>https://rgoswami.me/posts/scp-smallgrp-meet1/</link><pubDate>Fri, 17 Apr 2020 22:54:00 +0000</pubDate><guid>https://rgoswami.me/posts/scp-smallgrp-meet1/</guid><description>Background As I mentioned earlier, I&amp;rsquo;m leading a section for Stanford CS106A: Code in Place. I did also mention I&amp;rsquo;d try to keep a set of short notes on the process. I finally had my first section meeting!
Preparation I went through the following:
Sent out a welcome message Detailed the workflow Set up a HackMD instance Set up some slides in beamer1 However, after that, I was still concerned since I didn&amp;rsquo;t get much of a response on the ice-breakers for EdStem.</description></item><item><title>Small Section On-boarding</title><link>https://rgoswami.me/posts/scp-smallgrp/</link><pubDate>Tue, 14 Apr 2020 02:48:00 +0000</pubDate><guid>https://rgoswami.me/posts/scp-smallgrp/</guid><description>Background As I mentioned in my last post, I&amp;rsquo;m leading a section for Stanford CS106A: Code in Place. I did also mention I&amp;rsquo;d try to keep a set of short notes on the process. So there1.
The Training Given the overwhelming number of students, and section leaders, the small groups are for fostering a community of teachers.
Consider allowing for daisy chaining during introductions Discussions are the primary take-away Only the instructor should be coding during the session Core components Clarity Content Atmosphere Section management Correctness Sectional Details Check in at the start Notice the space Check in regularly Avoid negative phrases Establish norms and the general culture Zoom Norms Have people introduce themselves Mute people when they aren&amp;rsquo;t talking Raise hands Try to use icebreakers which respect privacy Materials Here&amp;rsquo;s some of the stuff which, being as it was open-sourced, I suppose is OK to put here2.</description></item><item><title>On-boarding for Code in Place</title><link>https://rgoswami.me/posts/scp-onboarding/</link><pubDate>Fri, 10 Apr 2020 16:01:00 +0000</pubDate><guid>https://rgoswami.me/posts/scp-onboarding/</guid><description>Background A few weeks ago, I ended up recording a video for the Stanford CS106A: Code in Place initiative (which can be found here). I heard back a while ago, and am now to lead a section for the course!
I&amp;rsquo;ll probably be making a series of short posts as this process continues.
On-Boarding This was very reminiscent of the Carpentries instructor training, which makes sense, given how well thought out that experience was.</description></item><item><title>Analytics: Google to Goat</title><link>https://rgoswami.me/posts/goat-google/</link><pubDate>Thu, 09 Apr 2020 17:17:00 +0000</pubDate><guid>https://rgoswami.me/posts/goat-google/</guid><description>Background Like a lot of my tech based rants, this was brought on by a recent Hacker News post. I won&amp;rsquo;t go into why the product listed there is a hollow faux FOSS rip-off. I won&amp;rsquo;t discuss how the &amp;lsquo;free&amp;rsquo; analytics option, like many others are just hobby projects taking pot shots at other projects. Or how insanely overpriced most alternatives are.
I will however discuss why and how I transitioned to using the awesome Goat Counter.</description></item><item><title>Trees and Bags</title><link>https://rgoswami.me/posts/trees-and-bags/</link><pubDate>Thu, 26 Mar 2020 00:28:00 +0000</pubDate><guid>https://rgoswami.me/posts/trees-and-bags/</guid><description>Explain why using bagging for prediction trees generally improves predictions over regular prediction trees.
Introduction Bagging (or Bootstrap Aggregation) is one of the most commonly used ensemble method for improving the prediction of trees. We will broadly follow a historical development trend to understand the process. That is, we will begin by considering the Bootstrap method. This in turn requires knowledge of the Jacknife method, which is understandable from a simple bias variance perspective.</description></item><item><title>D3 for Git</title><link>https://rgoswami.me/posts/d3git/</link><pubDate>Mon, 16 Mar 2020 00:17:00 +0000</pubDate><guid>https://rgoswami.me/posts/d3git/</guid><description>Background I have had a lot of discussions regarding the teaching of git This is mostly as a part of the SoftwareCarpentries, or in view of my involvement with univ.ai, or simply in every public space I am associated with Without getting into my views, I just wanted to keep this resource in mind The site Learning git is a highly contentious thing People seem to be fond of GUI tools, especially since on non *nix systems, it seems that there is a lot of debate surrounding obtaining the git utility in the first place One of the best ways of understanding (without installing stuff) the mental models required for working with git is this site</description></item><item><title>Shorter Posts</title><link>https://rgoswami.me/posts/shortpost/</link><pubDate>Mon, 16 Mar 2020 00:16:00 +0000</pubDate><guid>https://rgoswami.me/posts/shortpost/</guid><description>Background Sometime this year, I realized that I no longer have access to a lot of my older communication. This included, a lot of resources I enjoyed and shared with the people who were around me at that point in time. To counter this, I have decided to opt for shorter posts, even if they don&amp;rsquo;t always include the same level of detail I would prefer to provide.
Alternatives I have an automated system based around IFTTT combined with Twitter, Diigo, and even Pocket However, that doesn&amp;rsquo;t really tell me much, and trawling through a massive glut of data is often pointless as well There&amp;rsquo;s always Twitter, but I don&amp;rsquo;t really care to hear the views of others when I want to revisit my own ideas Conclusions I will be making shorter posts here, like the random one on octobox</description></item><item><title>Provisioning Dotfiles on an HPC</title><link>https://rgoswami.me/posts/prov-dots/</link><pubDate>Mon, 16 Mar 2020 00:06:00 +0000</pubDate><guid>https://rgoswami.me/posts/prov-dots/</guid><description>Background My dotfiles turned 4 years old a few months ago (since 9th Jan 2017) and remains one of my most frequently updated projects for obvious reasons. Going through the changes reminds me of a whole of posts I never got around to writing.
Anyway, recently I gained access to another HPC cluster, with a standard configuration (bash, old CentOS) and decided to track my provisioning steps. This is really a very streamlined experience by now, since I&amp;rsquo;ve used the same setup across scores of machines.</description></item><item><title>Switching to Colemak</title><link>https://rgoswami.me/posts/colemak-switch/</link><pubDate>Sat, 29 Feb 2020 14:06:00 +0000</pubDate><guid>https://rgoswami.me/posts/colemak-switch/</guid><description>Thoughts on and rationale behind leaving QWERTY and touch typing in general. Followed by this post on refactoring my Dotfiles.
Background I just realized that it has been over two years since I switched from QWERTY to Colemak but somehow never managed to write about it. It was a major change in my life, and it took forever to get acclimatized to. I do not think I&amp;rsquo;ll ever again be in a position to make such a change in my life again, but it was definitely worth it.</description></item><item><title>Bojack Horseman</title><link>https://rgoswami.me/posts/bojack-horseman/</link><pubDate>Thu, 27 Feb 2020 22:28:00 +0000</pubDate><guid>https://rgoswami.me/posts/bojack-horseman/</guid><description>Background For a while I was worried about writing about a TV show here. I thought it might be frivolous, or worse, might outweigh the other kinds of articles I would like to write. However, like most things, that which is ignored just grows, so it is easier to just write and forget about it.
The Show Much has been said about how Bojack Horseman is one of the best shows ever, and they&amp;rsquo;re all correct.</description></item><item><title>ISLR :: Moving Beyond Linearity</title><link>https://rgoswami.me/posts/islr-ch7/</link><pubDate>Wed, 19 Feb 2020 09:47:00 +0000</pubDate><guid>https://rgoswami.me/posts/islr-ch7/</guid><description>Chapter VII - Moving Beyond Linearity All the questions are as per the ISL seventh printing of the First edition1.
Common libsUsed&amp;lt;-c(&amp;#34;dplyr&amp;#34;,&amp;#34;ggplot2&amp;#34;,&amp;#34;tidyverse&amp;#34;, &amp;#34;ISLR&amp;#34;,&amp;#34;caret&amp;#34;,&amp;#34;MASS&amp;#34;, &amp;#34;gridExtra&amp;#34;, &amp;#34;pls&amp;#34;,&amp;#34;latex2exp&amp;#34;,&amp;#34;data.table&amp;#34;) invisible(lapply(libsUsed, library, character.only = TRUE)) Question 7.6 - Page 299 In this exercise, you will further analyze the Wage data set considered throughout this chapter.
(a) Perform polynomial regression to predict wage using age. Use cross-validation to select the optimal degree d for the polynomial. What degree was chosen, and how does this compare to the results of hypothesis testing using ANOVA?</description></item><item><title>ISLR :: Linear Model Selection and Regularization</title><link>https://rgoswami.me/posts/islr-ch6/</link><pubDate>Wed, 19 Feb 2020 07:00:00 +0000</pubDate><guid>https://rgoswami.me/posts/islr-ch6/</guid><description>Chapter VI - Linear Model Selection and Regularization All the questions are as per the ISL seventh printing of the First edition1.
Common Instead of using the standard functions, we will leverage the mlr3 package2.
#install.packages(&amp;#34;mlr3&amp;#34;,&amp;#34;data.table&amp;#34;,&amp;#34;mlr3viz&amp;#34;,&amp;#34;mlr3learners&amp;#34;) Actually for R version 3.6.2, the steps to get it working were a bit more involved.
Load ISLR and other libraries.
libsUsed&amp;lt;-c(&amp;#34;dplyr&amp;#34;,&amp;#34;ggplot2&amp;#34;,&amp;#34;tidyverse&amp;#34;, &amp;#34;ISLR&amp;#34;,&amp;#34;caret&amp;#34;,&amp;#34;MASS&amp;#34;, &amp;#34;gridExtra&amp;#34;, &amp;#34;pls&amp;#34;,&amp;#34;latex2exp&amp;#34;,&amp;#34;data.table&amp;#34;) invisible(lapply(libsUsed, library, character.only = TRUE)) Question 6.8 - Page 262 In this exercise, we will generate simulated data, and will then use this data to perform best subset selection.</description></item><item><title>ISLR :: Resampling Methods</title><link>https://rgoswami.me/posts/islr-ch5/</link><pubDate>Tue, 18 Feb 2020 22:00:00 +0000</pubDate><guid>https://rgoswami.me/posts/islr-ch5/</guid><description>Chapter V - Resampling Methods All the questions are as per the ISL seventh printing of the First edition1.
Common Instead of using the standard functions, we will leverage the mlr3 package2.
#install.packages(&amp;#34;mlr3&amp;#34;,&amp;#34;data.table&amp;#34;,&amp;#34;mlr3viz&amp;#34;,&amp;#34;mlr3learners&amp;#34;) Actually for R version 3.6.2, the steps to get it working were a bit more involved.
install.packages(&amp;#34;remotes&amp;#34;,&amp;#34;data.table&amp;#34;, &amp;#34;GGally&amp;#34;,&amp;#34;precerec&amp;#34;) # For plots library(remotes) remotes::install_github(&amp;#34;mlr-org/mlr3&amp;#34;) remotes::install_github(&amp;#34;mlr-org/mlr3viz&amp;#34;) remotes::install_github(&amp;#34;mlr-org/mlr3learners&amp;#34;) Load ISLR and other libraries.
libsUsed&amp;lt;-c(&amp;#34;dplyr&amp;#34;,&amp;#34;ggplot2&amp;#34;,&amp;#34;tidyverse&amp;#34;, &amp;#34;ISLR&amp;#34;,&amp;#34;caret&amp;#34;,&amp;#34;MASS&amp;#34;, &amp;#34;pROC&amp;#34;,&amp;#34;mlr3&amp;#34;,&amp;#34;data.table&amp;#34;, &amp;#34;mlr3viz&amp;#34;,&amp;#34;mlr3learners&amp;#34;) invisible(lapply(libsUsed, library, character.only = TRUE)) Question 5.</description></item><item><title>ISLR :: Classification</title><link>https://rgoswami.me/posts/islr-ch4/</link><pubDate>Mon, 17 Feb 2020 15:28:00 +0000</pubDate><guid>https://rgoswami.me/posts/islr-ch4/</guid><description>Chapter IV - Classification All the questions are as per the ISL seventh printing of the First edition 1.
Common Stuff Here I&amp;rsquo;ll load things I will be using throughout, mostly libraries.
libsUsed&amp;lt;-c(&amp;#34;dplyr&amp;#34;,&amp;#34;ggplot2&amp;#34;,&amp;#34;tidyverse&amp;#34;,&amp;#34;ISLR&amp;#34;,&amp;#34;caret&amp;#34;) invisible(lapply(libsUsed, library, character.only = TRUE)) Question 4.10 - Page 171 This question should be answered using the Weekly data set, which is part of the ISLR package. This data is similar in nature to the Smarket data from this chapter&amp;rsquo;s lab, except that it contains 1, 089 weekly returns for 21 years, from the beginning of 1990 to the end of 2010.</description></item><item><title>Pandora and Proxychains</title><link>https://rgoswami.me/posts/pandora-proxychains/</link><pubDate>Sat, 15 Feb 2020 05:28:00 +0000</pubDate><guid>https://rgoswami.me/posts/pandora-proxychains/</guid><description>Background Pandora doesn&amp;rsquo;t work outside the states I keep forgetting how to set-up proxychains Proxychains Technically this article expects proxychains-ng, which seems to be the more up-to-date fork of the original proxychains.
Install proxychains-ng
# I am on archlinux.. sudo pacman -S proxychains-ng Copy the configuration to the $HOME directory
cp /etc/proxychains.conf . Edit said configuration to add some US-based proxy
In my particular case, I don&amp;rsquo;t keep the tor section enabled.</description></item><item><title>Replacing Jupyter with Orgmode</title><link>https://rgoswami.me/posts/jupyter-orgmode/</link><pubDate>Thu, 13 Feb 2020 22:36:00 +0000</pubDate><guid>https://rgoswami.me/posts/jupyter-orgmode/</guid><description>Background I dislike Jupyter notebooks (and JupyterHub) a lot EIN is really not much of a solution either In the past I have written some posts on TeX with JupyterHub and discussed ways to use virtual Python with JupyterHub in a more reasonable manner.
However, I personally found that EIN was a huge pain to work with, and I mostly ended up working with the web-interface anyway.
It is a bit redundant to do so, given that at-least for my purposes, the end result was a LaTeX document.</description></item><item><title>Poetry and Direnv</title><link>https://rgoswami.me/posts/poetry-direnv/</link><pubDate>Thu, 13 Feb 2020 21:36:00 +0000</pubDate><guid>https://rgoswami.me/posts/poetry-direnv/</guid><description>Background I end up writing about using poetry a lot I almost always use direnv in real life too I don&amp;rsquo;t keep writing mini scripts in my .envrc Honestly there&amp;rsquo;s nothing here anyone using the direnv wiki will find surprising, but then it is still neat to link back to.
Setting Up Poetry This essentially works by simply modifying the global .direnvrc which essentially gets sourced by every local .</description></item><item><title>Taming Github Notifications</title><link>https://rgoswami.me/posts/ghnotif/</link><pubDate>Wed, 12 Feb 2020 11:36:00 +0000</pubDate><guid>https://rgoswami.me/posts/ghnotif/</guid><description>Background As a member of several large organizations, I get a lot of github notifications. Not all of these are of relevance to me. This is especially true of psuedo-monorepo style repositories like the JOSS review system and especially the exercism community.
I recently (re-)joined the exercism community as a maintainer for the C++ lessons after having been a (sporadic) teacher This was largely in response to a community call to action as the group needed new blood to usher in v3 of the exercism project Anyway, I have since found that at the small cost of possibly much of my public repo data, I can manage my notifications better with Octobox</description></item><item><title>Site Rationale</title><link>https://rgoswami.me/posts/rationale/</link><pubDate>Tue, 11 Feb 2020 23:28:00 +0000</pubDate><guid>https://rgoswami.me/posts/rationale/</guid><description>Why this site exists I have a lot of online presences. I have been around (or at-least, lurking) for over ten years. Almost as long as I have been programming. Anyway, I have a penchant lately for using emacs and honestly there isn&amp;rsquo;t very good support for org-mode files. There are options recently with gatsby as well, but this seemed kinda neat.
What &amp;lsquo;this&amp;rsquo; is This site is built by Hugo The posts are generated with ox-hugo The theme is based of this excellent one by Djordje Atlialp, which in turn is based off of this theme by panr My modifications are here What is here Mostly random thoughts I don&amp;rsquo;t mind people knowing Some tech stuff which isn&amp;rsquo;t coherent enough to be put in any form with references Emacs specific workflows which I might want to write about more than short notes on the config What isn&amp;rsquo;t here Some collections should and will go to my grimoire My doom-emacs configuration Academic stuff is better tracked on Publons or Google Scholar or my pages hosted by my favorite IITK group or UI group</description></item><item><title>ISLR :: Multiple Linear Regression</title><link>https://rgoswami.me/posts/islr-ch2-ch3/</link><pubDate>Wed, 15 Jan 2020 05:28:00 +0000</pubDate><guid>https://rgoswami.me/posts/islr-ch2-ch3/</guid><description>Chapter II - Statistical Learning All the questions are as per the ISL seventh printing of the First edition 1.
Question 2.8 - Pages 54-55 This exercise relates to the College data set, which can be found in the file College.csv. It contains a number of variables for \(777\) different universities and colleges in the US. The variables are
Private : Public/private indicator Apps : Number of applications received Accept : Number of applicants accepted Enroll : Number of new students enrolled Top10perc : New students from top 10 % of high school class Top25perc : New students from top 25 % of high school class F.</description></item><item><title>About</title><link>https://rgoswami.me/about/</link><pubDate>Thu, 10 Aug 1995 00:00:00 +0000</pubDate><guid>https://rgoswami.me/about/</guid><description>A short historical recollection of some &lt;strong>thoughts&lt;/strong> and &lt;span class="underline">stuff&lt;/span>.</description></item><item><title>Collection of WebLinks</title><link>https://rgoswami.me/posts/rg-collection-weblinks/</link><pubDate>Thu, 10 Aug 1995 00:00:00 +0000</pubDate><guid>https://rgoswami.me/posts/rg-collection-weblinks/</guid><description>An attempt to re-claim and verify my digital presence.
Background I mentioned on my about page, that it is nigh impossible to keep track of every digital trace there is of me. That said, it is really not even a countable infinite set yet, so it is a good idea to get started before it gets much worse. This is minimally curated, and will only be sporadically updated, so take everything here with a grain of salt.</description></item><item><title>Search</title><link>https://rgoswami.me/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rgoswami.me/search/</guid><description>Search in full-text, the entire contents of the site.</description></item></channel></rss>